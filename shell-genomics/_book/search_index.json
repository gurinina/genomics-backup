[["index.html", "Introduction to the Command Line for Genomics 1 Welcome to Shell-Genomics!", " Introduction to the Command Line for Genomics Guri Giaever 2022-10-23 1 Welcome to Shell-Genomics! Command line interface (CLI) and graphic user interface (GUI) are different ways of interacting with a computer’s operating system. They have different pros and cons. Most people are familiar with the GUI as it is the default interface for most software, particularly on Windows and Mac OS. When using the GUI, you see visual representations of files, folders, applications etc. When using the CLI, you work largely with text representations of files, folders, input and output etc. The shell is a program that presents a command line interface that allows you to control your computer by typing instructions with a keyboard. There are several reasons to learn how to use the CLI: For most bioinformatics tools, there are no graphical interfaces. If you want to work in metagenomics or genomics you’re going to need to use the CLI/ shell. The shell gives you power. The command line allows you to work more efficiently. Tasks that are repetative (e.g. renaming hundreds of files) can be automated. Tasks that are tedius (e.g. testing a range of input parameters) can be simplified. To use remote computers or cloud computing, you need to use the shell. Getting Started This lesson assumes no prior experience with the tools covered in the workshop. However, learners are expected to have some familiarity with biological concepts, including the concept of genomic variation within a population. Participants should bring their laptops and plan to participate actively. Schedule Setup: Download files required for the lesson Introducing the Shell Navigating Files and Directories Working with Files and Directories Redirection Writing Scripts and Working with Data Project Organization Finish References Erin Alison Becker, Anita Schürch, Tracy Teal, Sheldon John McKay, Jessica Elizabeth Mizzi, François Michonneau, et al. (2019, June). datacarpentry/shell-genomics: Data Carpentry: Introduction to the shell for genomics data, June 2019 (Version v2019.06.1). Zenodo. "],["introducing-the-shell.html", "2 Introducing the Shell 2.1 What is a shell and why should I care? 2.2 How to access the shell 2.3 Navigating your file system 2.4 Tip", " 2 Introducing the Shell 2.1 What is a shell and why should I care? A shell is a computer program that presents a command line interface which allows you to control your computer using commands entered with a keyboard instead of controlling graphical user interfaces (GUIs) with a mouse/keyboard/touchscreen combination. There are many reasons to learn about the shell: Many bioinformatics tools can only be used through a command line interface. Many more have features and parameter options which are not available in the GUI. BLAST is an example. Many of the advanced functions are only accessible to users who know how to use a shell. The shell makes your work less boring. In bioinformatics you often need to repeat tasks with a large number of files. With the shell, you can automate those repetitive tasks and leave you free to do more exciting things. The shell makes your work less error-prone. When humans do the same thing a hundred different times (or even ten times), they’re likely to make a mistake. Your computer can do the same thing a thousand times with no mistakes. The shell makes your work more reproducible. When you carry out your work in the command-line (rather than a GUI), your computer keeps a record of every step that you’ve carried out, which you can use to re-do your work when you need to. It also gives you a way to communicate unambiguously what you’ve done, so that others can inspect or apply your process to new data. Many bioinformatic tasks require large amounts of computing power and can’t realistically be run on your own machine. These tasks are best performed using remote computers or cloud computing, which can only be accessed through a shell. In this lesson you will learn how to use the command line interface to move around in your file system. 2.2 How to access the shell On a Mac or Linux machine, you can access a shell through a program called “Terminal”, which is already available on your computer. The Terminal is a window into which we will type commands. If you’re using Windows, you’ll need to download a separate program to access the shell. 2.3 Navigating your file system The part of the operating system that manages files and directories is called the file system. It organizes our data into files, which hold information, and directories (also called “folders”), which hold files or other directories. Several commands are frequently used to create, inspect, rename, and delete files and directories. 2.4 Tip Hot-key combinations are shortcuts for performing common commands. The hot-key combination for clearing the console is Ctrl+L. Feel free to try it and see for yourself. Let’s find out where we are by running a command called pwd (which stands for “print working directory”). At any moment, our current working directory is our current default directory, i.e., the directory that the computer assumes we want to run commands in, unless we explicitly specify something else. Here, the computer’s response is /Users/dcuser, which is the top level directory within our cloud system: pwd ## /Users/ggiaever/Documents/RProjects/shell-genomics Let’s look at how our file system is organized. We can see what files and subdirectories are in this directory by running ls, which stands for “listing”: ls ## 01-introduction.Rmd ## 02-the-filesystem.Rmd ## 03-working-with-files.Rmd ## 04-redirection.Rmd ## 05-writing-scripts.Rmd ## 06-organization.Rmd ## LICENSE.md ## Solutions.Rmd ## _book ## _bookdown.yml ## _output.yml ## dc_workshop_log_2022_11_27.sh ## fig ## fix-paths.sh ## fix-paths.shes ## index.Rmd ## index.md ## render167cc5a004578.rds ## shell-genomics.Rproj ## shell-genomics.rds ls prints the names of the files and directories in the current directory in alphabetical order, arranged neatly into columns. We’ll be working within the ~/shell_data subdirectory, and creating new subdirectories, throughout this workshop. The command to change locations in our file system is cd, followed by a directory name to change our working directory. cd stands for “change directory”. Let’s say we want to navigate to the shell_data directory we saw above. We can use the following command to get there: cd ~/shell_data Let’s look at what is in this directory: cd ~/shell_data ls ## sra_metadata ## untrimmed_fastq We can make the ls output more comprehensible by using the flag -F, which tells ls to add a trailing / to the names of directories: cd ~/shell_data ls -F ## sra_metadata/ ## untrimmed_fastq/ Anything with a “/” after it is a directory. Things with a “*” after them are programs. If there are no decorations, it’s a file. ls has lots of other options. To find out what they are, we can type: man ls ## LS(1) General Commands Manual LS(1) ## ## N\bNA\bAM\bME\bE ## l\bls\bs – list directory contents ## ## S\bSY\bYN\bNO\bOP\bPS\bSI\bIS\bS ## l\bls\bs [-\b-@\b@A\bAB\bBC\bCF\bFG\bGH\bHI\bIL\bLO\bOP\bPR\bRS\bST\bTU\bUW\bWa\bab\bbc\bcd\bde\bef\bfg\bgh\bhi\bik\bkl\blm\bmn\bno\bop\bpq\bqr\brs\bst\btu\buv\bvw\bwx\bxy\by1\b1%\b%,\b,] [-\b--\b-c\bco\bol\blo\bor\br=_\bw_\bh_\be_\bn] ## [-\b-D\bD _\bf_\bo_\br_\bm_\ba_\bt] [_\bf_\bi_\bl_\be _\b._\b._\b.] ## ## D\bDE\bES\bSC\bCR\bRI\bIP\bPT\bTI\bIO\bON\bN ## For each operand that names a _\bf_\bi_\bl_\be of a type other than directory, l\bls\bs ## displays its name as well as any requested, associated information. For ## each operand that names a _\bf_\bi_\bl_\be of type directory, l\bls\bs displays the names of ## files contained within that directory, as well as any requested, associated ## information. ## ## If no operands are given, the contents of the current directory are ## displayed. If more than one operand is given, non-directory operands are ## displayed first; directory and non-directory operands are sorted separately ## and in lexicographical order. ## ## The following options are available: ## ## -\b-@\b@ Display extended attribute keys and sizes in long (-\b-l\bl) output. ## ## -\b-A\bA Include directory entries whose names begin with a dot (‘_\b.’) except ## for _\b. and _\b._\b.. Automatically set for the super-user unless -\b-I\bI is ## specified. ## ## -\b-B\bB Force printing of non-printable characters (as defined by ctype(3) ## and current locale settings) in file names as \\_\bx_\bx_\bx, where _\bx_\bx_\bx is ## the numeric value of the character in octal. This option is not ## defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-C\bC Force multi-column output; this is the default when output is to a ## terminal. ## ## -\b-D\bD _\bf_\bo_\br_\bm_\ba_\bt ## When printing in the long (-\b-l\bl) format, use _\bf_\bo_\br_\bm_\ba_\bt to format the ## date and time output. The argument _\bf_\bo_\br_\bm_\ba_\bt is a string used by ## strftime(3). Depending on the choice of format string, this may ## result in a different number of columns in the output. This option ## overrides the -\b-T\bT option. This option is not defined in IEEE Std ## 1003.1-2008 (“POSIX.1”). ## ## -\b-F\bF Display a slash (‘/’) immediately after each pathname that is a ## directory, an asterisk (‘*’) after each that is executable, an at ## sign (‘@’) after each symbolic link, an equals sign (‘=’) after ## each socket, a percent sign (‘%’) after each whiteout, and a ## vertical bar (‘|’) after each that is a FIFO. ## ## -\b-G\bG Enable colorized output. This option is equivalent to defining ## CLICOLOR or COLORTERM in the environment and setting -\b--\b-c\bco\bol\blo\bor\br=_\ba_\bu_\bt_\bo. ## (See below.) This functionality can be compiled out by removing ## the definition of COLORLS. This option is not defined in IEEE Std ## 1003.1-2008 (“POSIX.1”). ## ## -\b-H\bH Symbolic links on the command line are followed. This option is ## assumed if none of the -\b-F\bF, -\b-d\bd, or -\b-l\bl options are specified. ## ## -\b-I\bI Prevent -\b-A\bA from being automatically set for the super-user. This ## option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-L\bL Follow all symbolic links to final target and list the file or ## directory the link references rather than the link itself. This ## option cancels the -\b-P\bP option. ## ## -\b-O\bO Include the file flags in a long (-\b-l\bl) output. This option is ## incompatible with IEEE Std 1003.1-2008 (“POSIX.1”). See chflags(1) ## for a list of file flags and their meanings. ## ## -\b-P\bP If argument is a symbolic link, list the link itself rather than ## the object the link references. This option cancels the -\b-H\bH and -\b-L\bL ## options. ## ## -\b-R\bR Recursively list subdirectories encountered. ## ## -\b-S\bS Sort by size (largest file first) before sorting the operands in ## lexicographical order. ## ## -\b-T\bT When printing in the long (-\b-l\bl) format, display complete time ## information for the file, including month, day, hour, minute, ## second, and year. The -\b-D\bD option gives even more control over the ## output format. This option is not defined in IEEE Std 1003.1-2008 ## (“POSIX.1”). ## ## -\b-U\bU Use time when file was created for sorting or printing. This ## option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-W\bW Display whiteouts when scanning directories. This option is not ## defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-a\ba Include directory entries whose names begin with a dot (‘_\b.’). ## ## -\b-b\bb As -\b-B\bB, but use C escape codes whenever possible. This option is ## not defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-c\bc Use time when file status was last changed for sorting or printing. ## ## -\b--\b-c\bco\bol\blo\bor\br=_\bw_\bh_\be_\bn ## Output colored escape sequences based on _\bw_\bh_\be_\bn, which may be set to ## either a\bal\blw\bwa\bay\bys\bs, a\bau\but\bto\bo, or n\bne\bev\bve\ber\br. ## ## a\bal\blw\bwa\bay\bys\bs will make l\bls\bs always output color. If TERM is unset or set ## to an invalid terminal, then l\bls\bs will fall back to explicit ANSI ## escape sequences without the help of termcap(5). a\bal\blw\bwa\bay\bys\bs is the ## default if -\b--\b-c\bco\bol\blo\bor\br is specified without an argument. ## ## a\bau\but\bto\bo will make l\bls\bs output escape sequences based on termcap(5), but ## only if stdout is a tty and either the -\b-G\bG flag is specified or the ## COLORTERM environment variable is set and not empty. ## ## n\bne\bev\bve\ber\br will disable color regardless of environment variables. ## n\bne\bev\bve\ber\br is the default when neither -\b--\b-c\bco\bol\blo\bor\br nor -\b-G\bG is specified. ## ## For compatibility with GNU coreutils, l\bls\bs supports y\bye\bes\bs or f\bfo\bor\brc\bce\be as ## equivalent to a\bal\blw\bwa\bay\bys\bs, n\bno\bo or n\bno\bon\bne\be as equivalent to n\bne\bev\bve\ber\br, and t\btt\bty\by or ## i\bif\bf-\b-t\btt\bty\by as equivalent to a\bau\but\bto\bo. ## ## -\b-d\bd Directories are listed as plain files (not searched recursively). ## ## -\b-e\be Print the Access Control List (ACL) associated with the file, if ## present, in long (-\b-l\bl) output. ## ## -\b-f\bf Output is not sorted. This option turns on -\b-a\ba. It also negates ## the effect of the -\b-r\br, -\b-S\bS and -\b-t\bt options. As allowed by IEEE Std ## 1003.1-2008 (“POSIX.1”), this option has no effect on the -\b-d\bd, -\b-l\bl, ## -\b-R\bR and -\b-s\bs options. ## ## -\b-g\bg This option has no effect. It is only available for compatibility ## with 4.3BSD, where it was used to display the group name in the ## long (-\b-l\bl) format output. This option is incompatible with IEEE Std ## 1003.1-2008 (“POSIX.1”). ## ## -\b-h\bh When used with the -\b-l\bl option, use unit suffixes: Byte, Kilobyte, ## Megabyte, Gigabyte, Terabyte and Petabyte in order to reduce the ## number of digits to four or fewer using base 2 for sizes. This ## option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-i\bi For each file, print the file&#39;s file serial number (inode number). ## ## -\b-k\bk This has the same effect as setting environment variable BLOCKSIZE ## to 1024, except that it also nullifies any -\b-h\bh options to its left. ## ## -\b-l\bl (The lowercase letter “ell”.) List files in the long format, as ## described in the _\bT_\bh_\be _\bL_\bo_\bn_\bg _\bF_\bo_\br_\bm_\ba_\bt subsection below. ## ## -\b-m\bm Stream output format; list files across the page, separated by ## commas. ## ## -\b-n\bn Display user and group IDs numerically rather than converting to a ## user or group name in a long (-\b-l\bl) output. This option turns on the ## -\b-l\bl option. ## ## -\b-o\bo List in long format, but omit the group id. ## ## -\b-p\bp Write a slash (‘/’) after each filename if that file is a ## directory. ## ## -\b-q\bq Force printing of non-graphic characters in file names as the ## character ‘?’; this is the default when output is to a terminal. ## ## -\b-r\br Reverse the order of the sort. ## ## -\b-s\bs Display the number of blocks used in the file system by each file. ## Block sizes and directory totals are handled as described in _\bT_\bh_\be ## _\bL_\bo_\bn_\bg _\bF_\bo_\br_\bm_\ba_\bt subsection below, except (if the long format is not ## also requested) the directory totals are not output when the output ## is in a single column, even if multi-column output is requested. ## (-\b-l\bl) format, display complete time information for the file, ## including month, day, hour, minute, second, and year. The -\b-D\bD ## option gives even more control over the output format. This option ## is not defined in IEEE Std 1003.1-2008 (“POSIX.1”). ## ## -\b-t\bt Sort by descending time modified (most recently modified first). ## If two files have the same modification timestamp, sort their names ## in ascending lexicographical order. The -\b-r\br option reverses both of ## these sort orders. ## ## Note that these sort orders are contradictory: the time sequence is ## in descending order, the lexicographical sort is in ascending ## order. This behavior is mandated by IEEE Std 1003.2 (“POSIX.2”). ## This feature can cause problems listing files stored with ## sequential names on FAT file systems, such as from digital cameras, ## where it is possible to have more than one image with the same ## timestamp. In such a case, the photos cannot be listed in the ## sequence in which they were taken. To ensure the same sort order ## for time and for lexicographical sorting, set the environment ## variable LS_SAMESORT or use the -\b-y\by option. This causes l\bls\bs to ## reverse the lexicographical sort order when sorting files with the ## same modification timestamp. ## ## -\b-u\bu Use time of last access, instead of time of last modification of ## the file for sorting (-\b-t\bt) or long printing (-\b-l\bl). ## ## -\b-v\bv Force unedited printing of non-graphic characters; this is the ## default when output is not to a terminal. ## ## -\b-w\bw Force raw printing of non-printable characters. This is the ## default when output is not to a terminal. This option is not ## defined in IEEE Std 1003.1-2001 (“POSIX.1”). ## ## -\b-x\bx The same as -\b-C\bC, except that the multi-column output is produced ## with entries sorted across, rather than down, the columns. ## ## -\b-y\by When the -\b-t\bt option is set, sort the alphabetical output in the same ## order as the time output. This has the same effect as setting ## LS_SAMESORT. See the description of the -\b-t\bt option for more ## details. This option is not defined in IEEE Std 1003.1-2001 ## (“POSIX.1”). ## ## -\b-%\b% Distinguish dataless files and directories with a &#39;%&#39; character in ## long ## ## -\b-1\b1 (The numeric digit “one”.) Force output to be one entry per line. ## This is the default when output is not to a terminal. (-\b-l\bl) output, ## and don&#39;t materialize dataless directories when listing them. ## ## -\b-, (Comma) When the -\b-l\bl option is set, print file sizes grouped and ## separated by thousands using the non-monetary separator returned by ## localeconv(3), typically a comma or period. If no locale is set, ## or the locale does not have a non-monetary separator, this option ## has no effect. This option is not defined in IEEE Std 1003.1-2001 ## (“POSIX.1”). ## ## The -\b-1\b1, -\b-C\bC, -\b-x\bx, and -\b-l\bl options all override each other; the last one ## specified determines the format used. ## ## The -\b-c\bc, -\b-u\bu, and -\b-U\bU options all override each other; the last one specified ## determines the file time used. ## ## The -\b-S\bS and -\b-t\bt options override each other; the last one specified ## determines the sort order used. ## ## The -\b-B\bB, -\b-b\bb, -\b-w\bw, and -\b-q\bq options all override each other; the last one ## specified determines the format used for non-printable characters. ## ## The -\b-H\bH, -\b-L\bL and -\b-P\bP options all override each other (either partially or ## fully); they are applied in the order specified. ## ## By default, l\bls\bs lists one entry per line to standard output; the exceptions ## are to terminals or when the -\b-C\bC or -\b-x\bx options are specified. ## ## File information is displayed with one or more ⟨blank⟩s separating the ## information associated with the -\b-i\bi, -\b-s\bs, and -\b-l\bl options. ## ## T\bTh\bhe\be L\bLo\bon\bng\bg F\bFo\bor\brm\bma\bat\bt ## If the -\b-l\bl option is given, the following information is displayed for each ## file: file mode, number of links, owner name, group name, number of bytes ## in the file, abbreviated month, day-of-month file was last modified, hour ## file last modified, minute file last modified, and the pathname. If the ## file or directory has extended attributes, the permissions field printed by ## the -\b-l\bl option is followed by a &#39;@&#39; character. Otherwise, if the file or ## directory has extended security information (such as an access control ## list), the permissions field printed by the -\b-l\bl option is followed by a &#39;+&#39; ## character. If the -\b-%\b% option is given, a &#39;%&#39; character follows the ## permissions field for dataless files and directories, possibly replacing ## the &#39;@&#39; or &#39;+&#39; character. ## ## If the modification time of the file is more than 6 months in the past or ## future, and the -\b-D\bD or -\b-T\bT are not specified, then the year of the last ## modification is displayed in place of the hour and minute fields. ## ## If the owner or group names are not a known user or group name, or the -\b-n\bn ## option is given, the numeric ID&#39;s are displayed. ## ## If the file is a character special or block special file, the device number ## for the file is displayed in the size field. If the file is a symbolic ## link the pathname of the linked-to file is preceded by “-&gt;”. ## ## The listing of a directory&#39;s contents is preceded by a labeled total number ## of blocks used in the file system by the files which are listed as the ## directory&#39;s contents (which may or may not include _\b. and _\b._\b. and other files ## which start with a dot, depending on other options). ## ## The default block size is 512 bytes. The block size may be set with option ## -\b-k\bk or environment variable BLOCKSIZE. Numbers of blocks in the output will ## have been rounded up so the numbers of bytes is at least as many as used by ## the corresponding file system blocks (which might have a different size). ## ## The file mode printed under the -\b-l\bl option consists of the entry type and ## the permissions. The entry type character describes the type of file, as ## follows: ## ## -\b- Regular file. ## b\bb Block special file. ## c\bc Character special file. ## d\bd Directory. ## l\bl Symbolic link. ## p\bp FIFO. ## s\bs Socket. ## w\bw Whiteout. ## ## The next three fields are three characters each: owner permissions, group ## permissions, and other permissions. Each field has three character ## positions: ## ## 1. If r\br, the file is readable; if -\b-, it is not readable. ## ## 2. If w\bw, the file is writable; if -\b-, it is not writable. ## ## 3. The first of the following that applies: ## ## S\bS If in the owner permissions, the file is not ## executable and set-user-ID mode is set. If in the ## group permissions, the file is not executable and ## set-group-ID mode is set. ## ## s\bs If in the owner permissions, the file is executable ## and set-user-ID mode is set. If in the group ## permissions, the file is executable and setgroup-ID ## mode is set. ## ## x\bx The file is executable or the directory is ## searchable. ## ## -\b- The file is neither readable, writable, executable, ## nor set-user-ID nor set-group-ID mode, nor sticky. ## (See below.) ## ## These next two apply only to the third character in the last ## group (other permissions). ## ## T\bT The sticky bit is set (mode 1000), but not execute ## or search permission. (See chmod(1) or sticky(7).) ## ## t\bt The sticky bit is set (mode 1000), and is searchable ## or executable. (See chmod(1) or sticky(7).) ## ## The next field contains a plus (‘+’) character if the file has an ACL, or a ## space (‘ ’) if it does not. The l\bls\bs utility does not show the actual ACL; ## use getfacl(1) to do this. ## ## E\bEN\bNV\bVI\bIR\bRO\bON\bNM\bME\bEN\bNT\bT ## The following environment variables affect the execution of l\bls\bs: ## ## BLOCKSIZE If this is set, its value, rounded up to 512 or down to ## a multiple of 512, will be used as the block size in ## bytes by the -\b-l\bl and -\b-s\bs options. See _\bT_\bh_\be _\bL_\bo_\bn_\bg _\bF_\bo_\br_\bm_\ba_\bt ## subsection for more information. ## ## CLICOLOR Use ANSI color sequences to distinguish file types. ## See LSCOLORS below. In addition to the file types ## mentioned in the -\b-F\bF option some extra attributes ## (setuid bit set, etc.) are also displayed. The ## colorization is dependent on a terminal type with the ## proper termcap(5) capabilities. The default “cons25” ## console has the proper capabilities, but to display the ## colors in an xterm(1), for example, the TERM variable ## must be set to “xterm-color”. Other terminal types may ## require similar adjustments. Colorization is silently ## disabled if the output is not directed to a terminal ## unless the CLICOLOR_FORCE variable is defined or ## -\b--\b-c\bco\bol\blo\bor\br is set to “always”. ## ## CLICOLOR_FORCE Color sequences are normally disabled if the output is ## not directed to a terminal. This can be overridden by ## setting this variable. The TERM variable still needs ## to reference a color capable terminal however otherwise ## it is not possible to determine which color sequences ## to use. ## ## COLORTERM See description for CLICOLOR above. ## ## COLUMNS If this variable contains a string representing a ## decimal integer, it is used as the column position ## width for displaying multiple-text-column output. The ## l\bls\bs utility calculates how many pathname text columns to ## display based on the width provided. (See -\b-C\bC and -\b-x\bx.) ## ## LANG The locale to use when determining the order of day and ## month in the long -\b-l\bl format output. See environ(7) for ## more information. ## ## LSCOLORS The value of this variable describes what color to use ## for which attribute when colors are enabled with ## CLICOLOR or COLORTERM. This string is a concatenation ## of pairs of the format _\bf_\bb, where _\bf is the foreground ## color and _\bb is the background color. ## ## The color designators are as follows: ## ## a\ba black ## b\bb red ## c\bc green ## d\bd brown ## e\be blue ## f\bf magenta ## g\bg cyan ## h\bh light grey ## A\bA bold black, usually shows up as dark grey ## B\bB bold red ## C\bC bold green ## D\bD bold brown, usually shows up as yellow ## E\bE bold blue ## F\bF bold magenta ## G\bG bold cyan ## H\bH bold light grey; looks like bright white ## x\bx default foreground or background ## ## Note that the above are standard ANSI colors. The ## actual display may differ depending on the color ## capabilities of the terminal in use. ## ## The order of the attributes are as follows: ## ## 1. directory ## 2. symbolic link ## 3. socket ## 4. pipe ## 5. executable ## 6. block special ## 7. character special ## 8. executable with setuid bit set ## 9. executable with setgid bit set ## 10. directory writable to others, with sticky ## bit ## 11. directory writable to others, without sticky ## bit ## ## The default is &quot;exfxcxdxbxegedabagacad&quot;, i.e., blue ## foreground and default background for regular ## directories, black foreground and red background for ## setuid executables, etc. ## ## LS_COLWIDTHS If this variable is set, it is considered to be a ## colon-delimited list of minimum column widths. ## Unreasonable and insufficient widths are ignored (thus ## zero signifies a dynamically sized column). Not all ## columns have changeable widths. The fields are, in ## order: inode, block count, number of links, user name, ## group name, flags, file size, file name. ## ## LS_SAMESORT If this variable is set, the -\b-t\bt option sorts the names ## of files with the same modification timestamp in the ## same sense as the time sort. See the description of ## the -\b-t\bt option for more details. ## ## TERM The CLICOLOR and COLORTERM functionality depends on a ## terminal type with color capabilities. ## ## TZ The timezone to use when displaying dates. See ## environ(7) for more information. ## ## E\bEX\bXI\bIT\bT S\bST\bTA\bAT\bTU\bUS\bS ## The l\bls\bs utility exits 0 on success, and &gt;0 if an error occurs. ## ## E\bEX\bXA\bAM\bMP\bPL\bLE\bES\bS ## List the contents of the current working directory in long format: ## ## $ ls -l ## ## In addition to listing the contents of the current working directory in ## long format, show inode numbers, file flags (see chflags(1)), and suffix ## each filename with a symbol representing its file type: ## ## $ ls -lioF ## ## List the files in _\b/_\bv_\ba_\br_\b/_\bl_\bo_\bg, sorting the output such that the most recently ## modified entries are printed first: ## ## $ ls -lt /var/log ## ## C\bCO\bOM\bMP\bPA\bAT\bTI\bIB\bBI\bIL\bLI\bIT\bTY\bY ## The group field is now automatically included in the long listing for files ## in order to be compatible with the IEEE Std 1003.2 (“POSIX.2”) ## specification. ## ## L\bLE\bEG\bGA\bAC\bCY\bY D\bDE\bES\bSC\bCR\bRI\bIP\bPT\bTI\bIO\bON\bN ## In legacy mode, the -\b-f\bf option does not turn on the -\b-a\ba option and the -\b-g\bg, ## -\b-n\bn, and -\b-o\bo options do not turn on the -\b-l\bl option. ## ## Also, the -\b-o\bo option causes the file flags to be included in a long (-l) ## output; there is no -\b-O\bO option. ## ## When -\b-H\bH is specified (and not overridden by -\b-L\bL or -\b-P\bP) and a file argument ## is a symlink that resolves to a non-directory file, the output will reflect ## the nature of the link, rather than that of the file. In legacy operation, ## the output will describe the file. ## ## For more information about legacy mode, see compat(5). ## ## S\bSE\bEE\bE A\bAL\bLS\bSO\bO ## chflags(1), chmod(1), getfacl(1), sort(1), xterm(1), localeconv(3), ## strftime(3), strmode(3), compat(5), termcap(5), sticky(7), symlink(7) ## ## S\bST\bTA\bAN\bND\bDA\bAR\bRD\bDS\bS ## With the exception of options -\b-g\bg, -\b-n\bn and -\b-o\bo, the l\bls\bs utility conforms to ## IEEE Std 1003.1-2001 (“POSIX.1”) and IEEE Std 1003.1-2008 (“POSIX.1”). The ## options -\b-B\bB, -\b-D\bD, -\b-G\bG, -\b-I\bI, -\b-T\bT, -\b-U\bU, -\b-W\bW, -\b-Z\bZ, -\b-b\bb, -\b-h\bh, -\b-w\bw, -\b-y\by and -\b-, are non- ## standard extensions. ## ## The ACL support is compatible with IEEE Std 1003.2c (“POSIX.2c”) Draft 17 ## (withdrawn). ## ## H\bHI\bIS\bST\bTO\bOR\bRY\bY ## An l\bls\bs command appeared in Version 1 AT&amp;T UNIX. ## ## B\bBU\bUG\bGS\bS ## To maintain backward compatibility, the relationships between the many ## options are quite complex. ## ## The exception mentioned in the -\b-s\bs option description might be a feature ## that was based on the fact that single-column output usually goes to ## something other than a terminal. It is debatable whether this is a design ## bug. ## ## IEEE Std 1003.2 (“POSIX.2”) mandates opposite sort orders for files with ## the same timestamp when sorting with the -\b-t\bt option. ## ## macOS 12.6 August 31, 2020 macOS 12.6 man (short for manual) displays detailed documentation (also referred as man page or man file) for bash commands. It is a powerful resource to explore bash commands, understand their usage and flags. Some manual files are very long. You can scroll through the file using your keyboard’s down arrow or use the &lt;kbdSpace "],["navigating-files-and-directories.html", "3 Navigating Files and Directories 3.1 Moving around the file system 3.2 Finding hidden directories 3.3 Exercise 3.4 Solution 3.5 Examining the contents of other directories 3.6 Navigating practice 3.7 Exercise 3.8 Solution 3.9 Full vs. Relative Paths 3.10 Relative path resolution 3.11 Exercise 3.12 Solution", " 3 Navigating Files and Directories 3.1 Moving around the file system We’ve learned how to use pwd to find our current location within our file system. We’ve also learned how to use cd to change locations and ls to list the contents of a directory. Now we’re going to learn some additional commands for moving around within our file system. Use the commands we’ve learned so far to navigate to the shell_data/untrimmed_fastq directory, if you’re not already there. cd cd ~/shell_data cd untrimmed_fastq What if we want to move back up and out of this directory and to our top level directory? Can we type cd data? Try it and see what happens. cd cd ~/shell_data cd untrimmed_fastq cd shell_data Your computer looked for a directory or file called shell_data within the directory you were already in. It didn’t know you wanted to look at a directory level above the one you were located in. We have a special command to tell the computer to move us back or up one directory level. cd ~/shell_data cd untrimmed_fastq cd .. Now we can use pwd to make sure that we are in the directory we intended to navigate to, and ls to check that the contents of the directory are correct. cd cd ~/shell_data cd untrimmed_fastq pwd ## /Users/ggiaever/shell_data/untrimmed_fastq cd cd ~/shell_data cd untrimmed_fastq ls ## SRR097977.fastq ## SRR098026.fastq ## bad-reads-script.sh ## bad_reads_2022.txt ## scripted_bad_reads_2022.txt ## seq_info_2022.txt ## species_EnsemblBacteria_2022.txt From this output, we can see that .. did indeed take us back one level in our file system. You can chain these together like so: cd cd ~/shell_data cd untrimmed_fastq ls ../../ ## @sockeye.arc.ubc.ca ## Applications ## Brewfile ## Desktop ## Documents ## Downloads ## ERP004763_sample_mapping.txt ## ERR458500.fastq ## ERR458501_fastqc ## ERR458501_fastqc.html ## ERR458501_fastqc.zip ## Google Drive ## Library ## Makevars ## Miniconda3-latest-MacOSX-x86_64.sh ## Movies ## Music ## Parallels ## Pictures ## Public ## SRR2584863_1.fastq ## SRR2584863_1.fastq.gz ## SRR2584863_2.fastq.gz ## SRR2584866_1.fastq ## SRR2584866_1.fastq.gz ## SRR8668769.fastq ## STAR-2.7.10a ## STAR-2.7.10a.tar.gz ## Takevars.textClipping ## Zotero ## arm64.sh ## backup-rstudio-prefs ## backuup-config-rstudio ## build.sh ## condash ## cpc2_result.txt ## dc_workshop ## echo ## err_md5sum.txt ## example1.cpp ## fasterq.tmp.Guris-MacBook-Pro-2.local.67466 ## femaleMiceWeights.csv ## find.txt ## gfortran-f51f1da0-darwin20.0-arm64.tar.gz ## gsea_home ## hello.cpp ## helloworld ## homebrew ## igv ## index.bam ## iupred2a_result.txt ## miniconda3 ## miniconda3-intel ## node_modules ## omp-test.c ## openmp-12.0.1-darwin20-Release.tar.gz ## openmp-13.0.0-darwin21-Release.tar.gz ## opt ## package-lock.json ## package.json ## path ## pfam_result.txt ## quality ## quant ## shell_data ## signalP_result.txt ## sorted_I_142254-142619.bam ## sorted_chrI_1-142620-143160.bam ## sorted_chrI_I ## sorted_chrI_I:142174-142253.bam ## species_EnsemblBacteria.txt ## sratoolkit.3.0.0-mac64 ## sratoolkit.current-mac64.tar.gz ## sratoolkit.tar.gz ## test-openblas.c ## tmp ## tmp.txt ## tnp ## xz-5.2.5-darwin.20-arm64.tar.gz ## zshrc_backup.txt prints the contents of /Users. 3.2 Finding hidden directories 3.3 Exercise First navigate to the shell_data directory. There is a hidden directory within this directory. Explore the options for ls to find out how to see hidden directories. List the contents of the directory and identify the name of the text file in that directory. Hint: hidden files and folders in Unix start with ., for example .my_hidden_directory 3.4 Solution In most commands the flags can be combined together in no particular order to obtain the desired results/output. cd cd ~/shell_data cd untrimmed_fastq ls -Fa ls -laF ## ./ ## ../ ## .DS_Store ## SRR097977.fastq ## SRR098026.fastq ## bad-reads-script.sh ## bad_reads_2022.txt ## scripted_bad_reads_2022.txt ## seq_info_2022.txt ## species_EnsemblBacteria_2022.txt ## total 18144 ## drwxr-xr-x@ 10 ggiaever staff 320 Oct 23 23:22 ./ ## drwxrwxr-x@ 6 ggiaever staff 192 Oct 20 19:06 ../ ## -rw-r--r--@ 1 ggiaever staff 6148 Oct 23 23:22 .DS_Store ## -rw-r--r--@ 1 ggiaever staff 47552 Nov 15 2017 SRR097977.fastq ## -rw-r--r--@ 1 ggiaever staff 43332 Nov 15 2017 SRR098026.fastq ## -rw-r--r-- 1 ggiaever staff 76 Oct 23 22:50 bad-reads-script.sh ## -rw-r--r-- 1 ggiaever staff 23214 Oct 23 23:22 bad_reads_2022.txt ## -rw-r--r-- 1 ggiaever staff 23214 Oct 23 22:51 scripted_bad_reads_2022.txt ## -rw-r--r-- 1 ggiaever staff 85 Oct 23 23:22 seq_info_2022.txt ## -rw-r--r-- 1 ggiaever staff 8352381 Oct 23 23:01 species_EnsemblBacteria_2022.txt 3.5 Examining the contents of other directories By default, the ls commands lists the contents of the working directory (i.e. the directory you are in). You can always find the directory you are in using the pwd command. However, you can also give ls the names of other directories to view. Navigate to your home directory if you are not already there. cd Then enter the command: cd ls ## @sockeye.arc.ubc.ca ## Applications ## Brewfile ## Desktop ## Documents ## Downloads ## ERP004763_sample_mapping.txt ## ERR458500.fastq ## ERR458501_fastqc ## ERR458501_fastqc.html ## ERR458501_fastqc.zip ## Google Drive ## Library ## Makevars ## Miniconda3-latest-MacOSX-x86_64.sh ## Movies ## Music ## Parallels ## Pictures ## Public ## SRR2584863_1.fastq ## SRR2584863_1.fastq.gz ## SRR2584863_2.fastq.gz ## SRR2584866_1.fastq ## SRR2584866_1.fastq.gz ## SRR8668769.fastq ## STAR-2.7.10a ## STAR-2.7.10a.tar.gz ## Takevars.textClipping ## Zotero ## arm64.sh ## backup-rstudio-prefs ## backuup-config-rstudio ## build.sh ## condash ## cpc2_result.txt ## dc_workshop ## echo ## err_md5sum.txt ## example1.cpp ## fasterq.tmp.Guris-MacBook-Pro-2.local.67466 ## femaleMiceWeights.csv ## find.txt ## gfortran-f51f1da0-darwin20.0-arm64.tar.gz ## gsea_home ## hello.cpp ## helloworld ## homebrew ## igv ## index.bam ## iupred2a_result.txt ## miniconda3 ## miniconda3-intel ## node_modules ## omp-test.c ## openmp-12.0.1-darwin20-Release.tar.gz ## openmp-13.0.0-darwin21-Release.tar.gz ## opt ## package-lock.json ## package.json ## path ## pfam_result.txt ## quality ## quant ## shell_data ## signalP_result.txt ## sorted_I_142254-142619.bam ## sorted_chrI_1-142620-143160.bam ## sorted_chrI_I ## sorted_chrI_I:142174-142253.bam ## species_EnsemblBacteria.txt ## sratoolkit.3.0.0-mac64 ## sratoolkit.current-mac64.tar.gz ## sratoolkit.tar.gz ## test-openblas.c ## tmp ## tmp.txt ## tnp ## xz-5.2.5-darwin.20-arm64.tar.gz ## zshrc_backup.txt The cd command works in a similar way. Try entering: cd ~/shell_data cd untrimmed_fastq This will take you to the untrimmed_fastq directory 3.6 Navigating practice 3.7 Exercise Navigate to your home directory. From there, list the contents of the untrimmed_fastq directory. 3.8 Solution 3.9 Full vs. Relative Paths The cd command takes an argument which is a directory name. Directories can be specified using either a relative path or a full absolute path. The directories on the computer are arranged into a hierarchy. The full path tells you where a directory is in that hierarchy. Navigate to the home directory, then enter the pwd command. cd pwd ## /Users/ggiaever You will see: /Users/dcuser This is the full name of your home directory. This tells you that you are in a directory called dcuser, which sits inside a directory called home which sits inside the very top directory in the hierarchy. The very top of the hierarchy is a directory called / which is usually referred to as the root directory. So, to summarize: dcuser is a directory in home which is a directory in /. More on root and home in the next section. Now enter the following command: cd /Users/dcuser/shell_data/.hidden This jumps forward multiple levels to the .hidden directory. Now go back to the home directory. cd ~ You can also navigate to the .hidden directory using: cd ~/shell_data/.hidden These two commands have the same effect, they both take us to the .hidden directory. The first uses the absolute path, giving the full address from the home directory. The second uses a relative path, giving only the address from the working directory. A full path always starts with a /. A relative path does not. A relative path is like getting directions from someone on the street. They tell you to “go right at the stop sign, and then turn left on Main Street”. That works great if you’re standing there together, but not so well if you’re trying to tell someone how to get there from another country. A full path is like GPS coordinates. It tells you exactly where something is no matter where you are right now. You can usually use either a full path or a relative path depending on what is most convenient. If we are in the home directory, it is more convenient to enter the full path. If we are in the working directory, it is more convenient to enter the relative path since it involves less typing. Over time, it will become easier for you to keep a mental note of the structure of the directories that you are using and how to quickly navigate amongst them. 3.10 Relative path resolution 3.11 Exercise Using the filesystem diagram below, if pwd displays /Users/thing, what will ls ../backup display? ../backup: No such file or directory 2012-12-01 2013-01-08 2013-01-27 2012-12-01/ 2013-01-08/ 2013-01-27/ original pnas_final pnas_sub File System for Challenge Questions 3.12 Solution 3.12.1 Navigational Shortcuts The root directory is the highest level directory in your file system and contains files that are important for your computer to perform its daily work. While you will be using the root (/) at the beginning of your absolute paths, it is important that you avoid working with data in these higher-level directories, as your commands can permanently alter files that the operating system needs to function. In many cases, trying to run commands in root directories will require special permissions which are not discussed here, so it’s best to avoid them and work within your home directory. Dealing with the home directory is very common. The tilde character, ~, is a shortcut for your home directory. In our case, the root directory is two levels above our home directory, so cd or cd ~ will take you to /Users/dcuser and cd / will take you to /. Navigate to the home directory: cd ~ Then enter the command: cd ~ ls ## @sockeye.arc.ubc.ca ## Applications ## Brewfile ## Desktop ## Documents ## Downloads ## ERP004763_sample_mapping.txt ## ERR458500.fastq ## ERR458501_fastqc ## ERR458501_fastqc.html ## ERR458501_fastqc.zip ## Google Drive ## Library ## Makevars ## Miniconda3-latest-MacOSX-x86_64.sh ## Movies ## Music ## Parallels ## Pictures ## Public ## SRR2584863_1.fastq ## SRR2584863_1.fastq.gz ## SRR2584863_2.fastq.gz ## SRR2584866_1.fastq ## SRR2584866_1.fastq.gz ## SRR8668769.fastq ## STAR-2.7.10a ## STAR-2.7.10a.tar.gz ## Takevars.textClipping ## Zotero ## arm64.sh ## backup-rstudio-prefs ## backuup-config-rstudio ## build.sh ## condash ## cpc2_result.txt ## dc_workshop ## echo ## err_md5sum.txt ## example1.cpp ## fasterq.tmp.Guris-MacBook-Pro-2.local.67466 ## femaleMiceWeights.csv ## find.txt ## gfortran-f51f1da0-darwin20.0-arm64.tar.gz ## gsea_home ## hello.cpp ## helloworld ## homebrew ## igv ## index.bam ## iupred2a_result.txt ## miniconda3 ## miniconda3-intel ## node_modules ## omp-test.c ## openmp-12.0.1-darwin20-Release.tar.gz ## openmp-13.0.0-darwin21-Release.tar.gz ## opt ## package-lock.json ## package.json ## path ## pfam_result.txt ## quality ## quant ## shell_data ## signalP_result.txt ## sorted_I_142254-142619.bam ## sorted_chrI_1-142620-143160.bam ## sorted_chrI_I ## sorted_chrI_I:142174-142253.bam ## species_EnsemblBacteria.txt ## sratoolkit.3.0.0-mac64 ## sratoolkit.current-mac64.tar.gz ## sratoolkit.tar.gz ## test-openblas.c ## tmp ## tmp.txt ## tnp ## xz-5.2.5-darwin.20-arm64.tar.gz ## zshrc_backup.txt This prints the contents of your home directory, without you needing to type the full path. The commands cd, and cd ~ are very useful for quickly navigating back to your home directory. We will be using the ~ character in later lessons to specify our home directory. "],["working-with-files-and-directories.html", "4 Working with Files and Directories 4.1 Working with Files 4.2 Exercise 4.3 Solution 4.4 Exercise 4.5 Solution 4.6 Command History 4.7 Exercise 4.8 Solution 4.9 Exercise 4.10 Solution 4.11 Details on the FASTQ format 4.12 Exercise 4.13 Solution 4.14 Creating, moving, copying, and removing 4.15 Exercise 4.16 Solution", " 4 Working with Files and Directories 4.1 Working with Files 4.1.1 Our data set: FASTQ files Now that we know how to navigate around our directory structure, let’s start working with our sequencing files. We did a sequencing experiment and have two results files, which are stored in our untrimmed_fastq directory. 4.1.2 Wildcards Navigate to your untrimmed_fastq directory: cd ~/shell_data/untrimmed_fastq We are interested in looking at the FASTQ files in this directory. We can list all files with the .fastq extension using the command: cd ~/shell_data/untrimmed_fastq ls *.fastq ## SRR097977.fastq ## SRR098026.fastq The * character is a special type of character called a wildcard, which can be used to represent any number of any type of character. Thus, *.fastq matches every file that ends with .fastq. This command: cd ~/shell_data/untrimmed_fastq ls *977.fastq ## SRR097977.fastq lists only the file that ends with 977.fastq. This command: ls /usr/bin/*.sh ## /usr/bin/power_report.sh Lists every file in /usr/bin that ends in the characters .sh. Note that the output displays full paths to files, since each result starts with /. 4.2 Exercise Do each of the following tasks from your current directory using a single ls command for each: List all of the files in /usr/bin that start with the letter ‘c’. List all of the files in /usr/bin that contain the letter ‘a’. List all of the files in /usr/bin that end with the letter ‘o’. Bonus: List all of the files in /usr/bin that contain the letter ‘a’ or the letter ‘c’. Hint: The bonus question requires a Unix wildcard that we haven’t talked about yet. Try searching the internet for information about Unix wildcards to find what you need to solve the bonus problem. 4.3 Solution 4.4 Exercise echo is a built-in shell command that writes its arguments, like a line of text to standard output. The echo command can also be used with pattern matching characters, such as wildcard characters. Here we will use the echo command to see how the wildcard character is interpreted by the shell. cd ~/shell_data/untrimmed_fastq echo *.fastq ## SRR097977.fastq SRR098026.fastq The * is expanded to include any file that ends with .fastq. We can see that the output of echo *.fastq is the same as that of ls *.fastq. What would the output look like if the wildcard could not be matched? Compare the outputs of echo *.missing and ls *.missing. 4.5 Solution 4.6 Command History If you want to repeat a command that you’ve run recently, you can access previous commands using the up arrow on your keyboard to go back to the most recent command. Likewise, the down arrow takes you forward in the command history. A few more useful shortcuts: &lt;kbdCtrl&lt;/kbd+&lt;kbdC&lt;/kbdwill cancel the command you are writing, and give you a fresh prompt. &lt;kbdCtrl&lt;/kbd+&lt;kbdR&lt;/kbdwill do a reverse-search through your command history. This is very useful. &lt;kbdCtrl&lt;/kbd+&lt;kbdL&lt;/kbdor the clear command will clear your screen. You can also review your recent commands with the history command, by entering: history to see a numbered list of recent commands. You can reuse one of these commands directly by referring to the number of that command. For example, if your history looked like this: 259 ls 260 ls /usr/bin/.sh 261 ls R1fastq then you could repeat command #260 by entering: !260 Type ! (exclamation point) and then the number of the command from your history. You will be glad you learned this when you need to re-run very complicated commands. For more information on advanced usage of history, read section 9.3 of Bash manual. 4.7 Exercise Find the line number in your history for the command that listed all the .sh files in /usr/bin. Rerun that command. 4.8 Solution Examining Files We now know how to switch directories, run programs, and look at the contents of directories, but how do we look at the contents of files? One way to examine a file is to print out all of the contents using the program cat. Enter the following command from within the untrimmed_fastq directory: cd ~/shell_data/untrimmed_fastq cat SRR098026.fastq This will print out all of the contents of the SRR098026.fastq to the screen. cat is a terrific program, but when the file is really big, it can be annoying to use. The program, less, is useful for this case. less opens the file as read only, and lets you navigate through it. The navigation commands are identical to the man program. Enter the following command: cd ~/shell_data/untrimmed_fastq less SRR097977.fastq q Some navigation commands in less: key action Space to go forward b to go backward g to go to the beginning G to go to the end q to quit less also gives you a way of searching through files. Use the “/” key to begin a search. Enter the word you would like to search for and press enter. The screen will jump to the next location where that word is found. Shortcut: If you hit “/” then “enter”, less will repeat the previous search. less searches from the current location and works its way forward. Scroll up a couple lines on your terminal to verify you are at the beginning of the file. Note, if you are at the end of the file and search for the sequence “CAA”, less will not find it. You either need to go to the beginning of the file (by typing g) and search again using / or you can use ? to search backwards in the same way you used / previously. For instance, let’s search forward for the sequence TTTTT in our file. You can see that we go right to that sequence, what it looks like, and where it is in the file. If you continue to type / and hit return, you will move forward to the next instance of this sequence motif. If you instead type ? and hit return, you will search backwards and move up the file to previous examples of this motif. 4.9 Exercise What are the next three nucleotides (characters) after the first instance of the sequence quoted above? 4.10 Solution Remember, the man program actually uses less internally and therefore uses the same commands, so you can search documentation using “/” as well! There’s another way that we can look at files, and in this case, just look at part of them. This can be particularly useful if we just want to see the beginning or end of the file, or see how it’s formatted. The commands are head and tail and they let you look at the beginning and end of a file, respectively. cd ~/shell_data/untrimmed_fastq head -n 4 SRR098026.fastq ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! cd ~/shell_data/untrimmed_fastq tail -n 1 SRR098026.fastq ## A!@B!BBB@ABAB#########!!!!!!!###### The -n option to either of these commands can be used to print the first or last n lines of a file. cd ~/shell_data/untrimmed_fastq head -n 1 SRR098026.fastq ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 cd ~/shell_data/untrimmed_fastq tail -n 1 SRR098026.fastq ## A!@B!BBB@ABAB#########!!!!!!!###### 4.11 Details on the FASTQ format Although it looks complicated (and it is), it’s easy to understand the fastq format with a little decoding. Some rules about the format include… Line Description 1 Always begins with ‘@’ and then information about the read 2 The actual DNA sequence 3 Always begins with a ‘+’ and sometimes the same info in line 1 4 Has a string of characters which represent the quality scores; must have same number of characters as line 2 We can view the first complete read in one of the files in our dataset by using head to look at the first four lines. cd ~/shell_data/untrimmed_fastq head -n 4 SRR098026.fastq ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! Line 4 shows the quality for each nucleotide in the read. Quality is interpreted as the probability of an incorrect base call (e.g. 1 in 10) or, equivalently, the base call accuracy (e.g. 90%). To make it possible to line up each individual nucleotide with its quality score, the numerical score is converted into a code where each individual character represents the numerical quality score for an individual nucleotide. The # character and each of the ! characters represent the encoded quality for an individual nucleotide. The numerical value assigned to each of these characters depends on the sequencing platform that generated the reads. The sequencing machine used to generate our data uses the standard Sanger quality PHRED score encoding, Illumina version 1.8 onwards. Each character is assigned a quality score between 0 and 42 as shown in the chart below. Quality encoding: !“#$%&amp;’()*+,-./0123456789:;&lt;=?@ABCDEFGHIJK | | | | | Quality score: 0……..10……..20……..30……..40.. Each quality score represents the probability that the corresponding nucleotide call is incorrect. This quality score is logarithmically based, so a quality score of 10 reflects a base call accuracy of 90%, but a quality score of 20 reflects a base call accuracy of 99%. These probability values are the results from the base calling algorithm and dependent on how much signal was captured for the base incorporation. 4.12 Exercise What is the last line of the ~/shell_data/untrimmed_fastq/SRR098026.fastq file? From your home directory, and without changing directories, use one short command to print the contents of all of the files in the ~/shell_data/untrimmed_fastq directory into one file. 4.13 Solution 4.14 Creating, moving, copying, and removing Now we can move around in the file structure, look at files, and search files. But what if we want to copy files or move them around or get rid of them? Most of the time, you can do these sorts of file manipulations without the command line, but there will be some cases where it will be impossible. You’ll also find that you may be working with hundreds of files and want to do similar manipulations to all of those files. In cases like this, it’s much faster to do these operations at the command line. 4.14.1 Copying Files When working with computational data, it’s important to keep a safe copy of that data that can’t be accidentally overwritten or deleted. For this lesson, our raw data is our FASTQ files. We don’t want to accidentally change the original files, so we’ll make a copy of them and change the file permissions so that we can read from, but not write to, the files. First, let’s make a copy of one of our FASTQ files using the cp command. Navigate to the shell_data/untrimmed_fastq directory and enter: cp SRR098026.fastq SRR098026-copy.fastq .fastq cd ~/shell_data/untrimmed_fastq cp SRR098026.fastq SRR098026-copy.fastq We now have two copies of the SRR098026.fastq file, one of them named SRR098026-copy.fastq .fastq. We’ll move this file to a new directory called backup where we’ll store our backup data files. 4.14.2 Creating Directories The mkdir command is used to make a directory. Enter mkdir followed by a space, then the directory name you want to create: cd ~/shell_data/untrimmed_fast mkdir backup 4.14.3 Moving / Renaming We can now move our backup file to this directory. We can move files around using the command mv: cd ~/shell_data/untrimmed_fastq cp SRR098026.fastq SRR098026-copy.fastq mkdir -p backup mv SRR098026-copy.fastq backup ls backup ## SRR098026-copy.fastq The mv command is also how you rename files. Let’s rename this file to make it clear that this is a backup: cd ~/shell_data/untrimmed_fastq/backup mv SRR098026-copy.fastq SRR098026-backup.fastq ls ## SRR098026-backup.fastq 4.14.4 File Permissions We’ve now made a backup copy of our file, but just because we have two copies, it doesn’t make us safe. We can still accidentally delete or overwrite both copies. To make sure we can’t accidentally mess up this backup file, we’re going to change the permissions on the file so that we’re only allowed to read (i.e. view) the file, not write to it (i.e. make new changes). View the current permissions on a file using the -l (long) flag for the ls command: cd ~/shell_data/untrimmed_fastq ls -l ## total 18128 ## -rw-r--r--@ 1 ggiaever staff 47552 Nov 15 2017 SRR097977.fastq ## -rw-r--r--@ 1 ggiaever staff 43332 Nov 15 2017 SRR098026.fastq ## drwxr-xr-x 3 ggiaever staff 96 Oct 23 23:39 backup ## -rw-r--r-- 1 ggiaever staff 76 Oct 23 22:50 bad-reads-script.sh ## -rw-r--r-- 1 ggiaever staff 23214 Oct 23 23:22 bad_reads_2022.txt ## -rw-r--r-- 1 ggiaever staff 23214 Oct 23 22:51 scripted_bad_reads_2022.txt ## -rw-r--r-- 1 ggiaever staff 85 Oct 23 23:22 seq_info_2022.txt ## -rw-r--r-- 1 ggiaever staff 8352381 Oct 23 23:01 species_EnsemblBacteria_2022.txt The first part of the output for the -l flag gives you information about the file’s current permissions. There are ten slots in the permissions list. The first character in this list is related to file type, not permissions, so we’ll ignore it for now. The next three characters relate to the permissions that the file owner has, the next three relate to the permissions for group members, and the final three characters specify what other users outside of your group can do with the file. We’re going to concentrate on the three positions that deal with your permissions (as the file owner). Permissions breakdown Here the three positions that relate to the file owner are rw-. The r means that you have permission to read the file, the w indicates that you have permission to write to (i.e. make changes to) the file, and the third position is a -, indicating that you don’t have permission to carry out the ability encoded by that space (this is the space where x or executable ability is stored, we’ll talk more about this in a later lesson). Our goal for now is to change permissions on this file so that you no longer have w or write permissions. We can do this using the chmod (change mode) command and subtracting (-) the write permission -w. cd ~/shell_data/untrimmed_fastq/backup chmod -w SRR098026-backup.fastq ls -l ## total 88 ## -r--r--r--@ 1 ggiaever staff 43332 Oct 23 23:39 SRR098026-backup.fastq 4.14.5 Removing To prove to ourselves that you no longer have the ability to modify this file, try deleting it with the rm command: cd ~/shell_data/untrimmed_fastq/backup rm SRR098026-backup.fastq You’ll be asked if you want to override your file permissions, or it just won’t remove the file. If it does ask, you should enter n for no. If you enter n (for no), the file will not be deleted. If you enter y, you will delete the file. This gives us an extra measure of security, as there is one more step between us and deleting our data files. Important: The rm command permanently removes the file. Be careful with this command. It doesn’t just nicely put the files in the Trash. They’re really gone. By default, rm will not delete directories. You can tell rm to delete a directory using the -r (recursive) option. Let’s delete the backup directory we just made. Enter the following command: The -r tells it to remove the directory… cd ~/shell_data/untrimmed_fastq/ rm -r backup Now you’ll be asked if you want to override your file permissions for backup/SRR098026-backup.fastq This will delete not only the directory, but all files within the directory. If you have write-protected files in the directory, you will be asked whether you want to override your permission settings. I’m going to say yes because you’re going to regenerate it in the next exercise! 4.15 Exercise Starting in the shell_data/untrimmed_fastq/ directory, do the following: 1. Make sure that you have deleted your backup directory and all files it contains. 2. Create a backup of SRR098026.fastq and SRR097977.fastq using cp. (Note: You’ll need to do this individually for each of the two FASTQ files. We haven’t learned yet how to do this with a wildcard.) 3. Use a wildcard to move all of your backup files to a new backup directory. 4. Change the permissions on all of your backup files to be write-protected. 4.16 Solution "],["redirection.html", "5 Redirection 5.1 Searching files 5.2 Nucleotide abbreviations 5.3 Determining quality 5.4 Exercise 5.5 Solution 5.6 Redirecting output 5.7 File extensions 5.8 Exercise 5.9 Solution 5.10 Exercise 5.11 Solution 5.12 File extensions - part 2 5.13 Custom grep control 5.14 File manipulation and more practices with pipes 5.15 Writing for loops 5.16 Using Basename in for loops 5.17 Exercise 5.18 Solution 5.19 Exercise 5.20 Solution", " 5 Redirection 5.1 Searching files We discussed in a previous episode how to search within a file using less. We can also search within files without even opening them, using grep. grep is a command-line utility for searching plain-text files for lines matching a specific set of characters (sometimes called a string) or a particular pattern (which can be specified using something called regular expressions). We’re not going to work with regular expressions in this lesson, and are instead going to specify the strings we are searching for. Let’s give it a try! 5.2 Nucleotide abbreviations The four nucleotides that appear in DNA are abbreviated A, C, T and G. Unknown nucleotides are represented with the letter N. An N appearing in a sequencing file represents a position where the sequencing machine was not able to confidently determine the nucleotide in that position. You can think of an N as being aNy nucleotide at that position in the DNA sequence. We’ll search for strings inside of our fastq files. Let’s first make sure we are in the correct directory: cd ~/shell_data/untrimmed_fastq/ Suppose we want to see how many reads in our file have really bad segments containing 10 consecutive unknown nucleotides (Ns). 5.3 Determining quality In this lesson, we’re going to be manually searching for strings of Ns within our sequence results to illustrate some principles of file searching. It can be really useful to do this type of searching to get a feel for the quality of your sequencing results, however, in your research you will most likely use a bioinformatics tool that has a built-in program for filtering out low-quality reads. You’ll learn how to use one such tool in a later lesson. Let’s search for the string NNNNNNNNNN in the SRR098026 file: cd ~/shell_data/untrimmed_fastq/ grep NNNNNNNNNN SRR098026.fastq ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNTNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNANNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNCNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNANNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNANNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANCNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNANNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNGNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNGNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNCNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNTNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNCNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNCNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNTNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANGNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNCNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANCNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNGNNGNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNCNNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNGNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNCNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNTNTNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNGNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## NNNNNNNNNNNGNGNNCGNNNNNNNNNNNNNCNNN ## NNNNNNNNNNNANANAAANNNNNNNNNNNNNANNN ## NNNNNNNNNNNANGCGCGNNNNNNNNNNNNNTNNN ## NNNNNNNNNNNGNGCCAGNNNNNNNNNNNNNANNN ## NNNNNNNNNNNGTTCAGCNNNNNNNNNNNNNANNN ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## NNNNNNNNNNNTGAAATCNNNNNNNNNNNNNCNNN ## NNNNNNNNNNNTCGCTTCNNNNNNNNNNNNNCNNN ## NNNNNNNNNNNTAAGAGANNNNNNNNNNNNNCNNN ## NNNNNNNNNNNGCTATCCNNNNNNNNNNNNNGNNN ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## NNNNNNNNNNNACAGCGANNNNNNNNNNNNNTNNN ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## NNNNNNNNNNNGCTGGCGNNNNNNNNNNNNNANNN ## NNNNNNNNNNNGCTACCTNNNNNNNNNNNNNTNNN ## NNNNNNNNNNCTGGCCGCNNNNNNNNNNNNNANNN ## NNNNNNNNNNGCCCGCCCNNNNNNNNNNNNNTNNN ## NNNNNNNNNNCGGATATCNNNNNNNNNNNNNTNNN ## NNNNNNNNNNGTTGATAANNNNNNNNNNNNAGNNN ## NNNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## GNNNNNNNNNGCTGAAAAANNNNNNNNNNNCANNN ## CNNNNNNNNNTACATCTGGNNNNNNNNNNNCGNNN ## ANNNNNNNNNCAATTTCCTNNNNNNNNNNNACNNN ## CNNNNNNNNNGTATTCACANNNNNNNNNNNTTNNN ## CNNNNNNNNNAGGCGTTGCNNNNNNNNNNNCTNNN ## TNNNNNNNNNTAAAATAAANNNNNNNNNNNAANNN ## CNNNNNNNNNTTGGTGCTGNNNNNNNNNNNAANNN ## ANNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## GNNNNNNNNNTGGCACAATNNNNNNNNNNNCGNNN ## TNNNNNNNNNCGTGGAATTNNNNNNNNNNNATNNN ## ANNNNNNNNNGCATTAAACGNNNNNNNNNNCANTN ## GNNNNNNNNNATCAAAAAGCNNNNNNNNNNGTNAN ## ANNNNNNNNNGTGGCAATATNNNNNNNNNNCCNGN ## ANNNNNNNNNTTCAGCGACTNNNNNNNNNNGTNGN ## CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN This command returns a lot of output to the terminal. Every single line in the SRR098026 file that contains at least 10 consecutive Ns is printed to the terminal, regardless of how long or short the file is. We may be interested not only in the actual sequence which contains this string, but in the name (or identifier) of that sequence. We discussed in a previous lesson that the identifier line immediately precedes the nucleotide sequence for each read in a FASTQ file. We may also want to inspect the quality scores associated with each of these reads. To get all of this information, we will return the line immediately before each match and the two lines immediately after each match. We can use the -B argument for grep to return a specific number of lines before each match. The -A argument returns a specific number of lines after each matching line. Here we want the line before and the two lines after each matching line, so we add -B1 -A2 to our grep command: cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.2 HWUSI-EAS1599_1:2:1:0:312 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.2 HWUSI-EAS1599_1:2:1:0:312 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.3 HWUSI-EAS1599_1:2:1:0:570 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.3 HWUSI-EAS1599_1:2:1:0:570 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.4 HWUSI-EAS1599_1:2:1:0:758 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.4 HWUSI-EAS1599_1:2:1:0:758 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.5 HWUSI-EAS1599_1:2:1:0:874 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.5 HWUSI-EAS1599_1:2:1:0:874 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.6 HWUSI-EAS1599_1:2:1:0:176 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.6 HWUSI-EAS1599_1:2:1:0:176 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.7 HWUSI-EAS1599_1:2:1:0:206 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.7 HWUSI-EAS1599_1:2:1:0:206 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.8 HWUSI-EAS1599_1:2:1:0:227 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.8 HWUSI-EAS1599_1:2:1:0:227 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.9 HWUSI-EAS1599_1:2:1:0:262 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.9 HWUSI-EAS1599_1:2:1:0:262 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.10 HWUSI-EAS1599_1:2:1:0:500 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.10 HWUSI-EAS1599_1:2:1:0:500 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.11 HWUSI-EAS1599_1:2:1:0:542 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.11 HWUSI-EAS1599_1:2:1:0:542 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.12 HWUSI-EAS1599_1:2:1:0:573 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.12 HWUSI-EAS1599_1:2:1:0:573 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.13 HWUSI-EAS1599_1:2:1:0:578 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.13 HWUSI-EAS1599_1:2:1:0:578 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.14 HWUSI-EAS1599_1:2:1:0:639 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.14 HWUSI-EAS1599_1:2:1:0:639 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.15 HWUSI-EAS1599_1:2:1:0:721 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.15 HWUSI-EAS1599_1:2:1:0:721 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.16 HWUSI-EAS1599_1:2:1:0:742 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.16 HWUSI-EAS1599_1:2:1:0:742 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.17 HWUSI-EAS1599_1:2:1:0:814 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.17 HWUSI-EAS1599_1:2:1:0:814 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.18 HWUSI-EAS1599_1:2:1:0:852 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.18 HWUSI-EAS1599_1:2:1:0:852 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.19 HWUSI-EAS1599_1:2:1:0:940 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.19 HWUSI-EAS1599_1:2:1:0:940 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.20 HWUSI-EAS1599_1:2:1:0:979 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.20 HWUSI-EAS1599_1:2:1:0:979 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.21 HWUSI-EAS1599_1:2:1:0:982 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.21 HWUSI-EAS1599_1:2:1:0:982 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.22 HWUSI-EAS1599_1:2:1:0:999 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.22 HWUSI-EAS1599_1:2:1:0:999 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.23 HWUSI-EAS1599_1:2:1:0:1005 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.23 HWUSI-EAS1599_1:2:1:0:1005 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.24 HWUSI-EAS1599_1:2:1:0:1009 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.24 HWUSI-EAS1599_1:2:1:0:1009 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.25 HWUSI-EAS1599_1:2:1:0:1027 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.25 HWUSI-EAS1599_1:2:1:0:1027 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.26 HWUSI-EAS1599_1:2:1:0:1062 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.26 HWUSI-EAS1599_1:2:1:0:1062 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.27 HWUSI-EAS1599_1:2:1:0:1134 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.27 HWUSI-EAS1599_1:2:1:0:1134 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.28 HWUSI-EAS1599_1:2:1:0:1203 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.28 HWUSI-EAS1599_1:2:1:0:1203 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.29 HWUSI-EAS1599_1:2:1:0:1300 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.29 HWUSI-EAS1599_1:2:1:0:1300 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.30 HWUSI-EAS1599_1:2:1:0:1310 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.30 HWUSI-EAS1599_1:2:1:0:1310 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.31 HWUSI-EAS1599_1:2:1:0:1452 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.31 HWUSI-EAS1599_1:2:1:0:1452 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.32 HWUSI-EAS1599_1:2:1:0:1466 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.32 HWUSI-EAS1599_1:2:1:0:1466 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.33 HWUSI-EAS1599_1:2:1:0:1571 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.33 HWUSI-EAS1599_1:2:1:0:1571 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.34 HWUSI-EAS1599_1:2:1:0:1618 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.34 HWUSI-EAS1599_1:2:1:0:1618 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.35 HWUSI-EAS1599_1:2:1:0:1654 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.35 HWUSI-EAS1599_1:2:1:0:1654 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.36 HWUSI-EAS1599_1:2:1:0:1670 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.36 HWUSI-EAS1599_1:2:1:0:1670 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.37 HWUSI-EAS1599_1:2:1:0:1716 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.37 HWUSI-EAS1599_1:2:1:0:1716 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.38 HWUSI-EAS1599_1:2:1:0:1746 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.38 HWUSI-EAS1599_1:2:1:0:1746 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.39 HWUSI-EAS1599_1:2:1:0:1762 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.39 HWUSI-EAS1599_1:2:1:0:1762 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.40 HWUSI-EAS1599_1:2:1:0:1879 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.40 HWUSI-EAS1599_1:2:1:0:1879 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.41 HWUSI-EAS1599_1:2:1:0:1896 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.41 HWUSI-EAS1599_1:2:1:0:1896 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.42 HWUSI-EAS1599_1:2:1:0:1914 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.42 HWUSI-EAS1599_1:2:1:0:1914 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.43 HWUSI-EAS1599_1:2:1:0:1941 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.43 HWUSI-EAS1599_1:2:1:0:1941 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.44 HWUSI-EAS1599_1:2:1:0:1983 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.44 HWUSI-EAS1599_1:2:1:0:1983 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.45 HWUSI-EAS1599_1:2:1:0:1987 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.45 HWUSI-EAS1599_1:2:1:0:1987 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.46 HWUSI-EAS1599_1:2:1:0:2034 length=35 ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.46 HWUSI-EAS1599_1:2:1:0:2034 length=35 ## !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ## @SRR098026.47 HWUSI-EAS1599_1:2:1:0:215 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.47 HWUSI-EAS1599_1:2:1:0:215 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.48 HWUSI-EAS1599_1:2:1:0:145 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.48 HWUSI-EAS1599_1:2:1:0:145 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.49 HWUSI-EAS1599_1:2:1:0:1593 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.49 HWUSI-EAS1599_1:2:1:0:1593 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.50 HWUSI-EAS1599_1:2:1:0:1583 length=35 ## NNNNNNNNNNNNNTNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.50 HWUSI-EAS1599_1:2:1:0:1583 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.51 HWUSI-EAS1599_1:2:1:0:120 length=35 ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.51 HWUSI-EAS1599_1:2:1:0:120 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.52 HWUSI-EAS1599_1:2:1:0:158 length=35 ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.52 HWUSI-EAS1599_1:2:1:0:158 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.53 HWUSI-EAS1599_1:2:1:0:1588 length=35 ## NNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.53 HWUSI-EAS1599_1:2:1:0:1588 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.54 HWUSI-EAS1599_1:2:1:0:257 length=35 ## NNNNNNNNNNNNNANNTNNNNNNNNNNNNNNNNNN ## +SRR098026.54 HWUSI-EAS1599_1:2:1:0:257 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.55 HWUSI-EAS1599_1:2:1:0:513 length=35 ## NNNNNNNNNNNNNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.55 HWUSI-EAS1599_1:2:1:0:513 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.56 HWUSI-EAS1599_1:2:1:0:558 length=35 ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.56 HWUSI-EAS1599_1:2:1:0:558 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.57 HWUSI-EAS1599_1:2:1:0:1382 length=35 ## NNNNNNNNNNNNNANNGNNNNNNNNNNNNNNNNNN ## +SRR098026.57 HWUSI-EAS1599_1:2:1:0:1382 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.58 HWUSI-EAS1599_1:2:1:0:454 length=35 ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.58 HWUSI-EAS1599_1:2:1:0:454 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.59 HWUSI-EAS1599_1:2:1:0:324 length=35 ## NNNNNNNNNNNNNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.59 HWUSI-EAS1599_1:2:1:0:324 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.60 HWUSI-EAS1599_1:2:1:0:546 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.60 HWUSI-EAS1599_1:2:1:0:546 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.61 HWUSI-EAS1599_1:2:1:0:1862 length=35 ## NNNNNNNNNNNANCNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.61 HWUSI-EAS1599_1:2:1:0:1862 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.62 HWUSI-EAS1599_1:2:1:0:7 length=35 ## NNNNNNNNNNNCNANNTNNNNNNNNNNNNNNNNNN ## +SRR098026.62 HWUSI-EAS1599_1:2:1:0:7 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.63 HWUSI-EAS1599_1:2:1:0:50 length=35 ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.63 HWUSI-EAS1599_1:2:1:0:50 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.64 HWUSI-EAS1599_1:2:1:0:56 length=35 ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.64 HWUSI-EAS1599_1:2:1:0:56 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.65 HWUSI-EAS1599_1:2:1:0:210 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.65 HWUSI-EAS1599_1:2:1:0:210 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.66 HWUSI-EAS1599_1:2:1:0:287 length=35 ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.66 HWUSI-EAS1599_1:2:1:0:287 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.67 HWUSI-EAS1599_1:2:1:0:335 length=35 ## NNNNNNNNNNNTNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.67 HWUSI-EAS1599_1:2:1:0:335 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.68 HWUSI-EAS1599_1:2:1:0:347 length=35 ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.68 HWUSI-EAS1599_1:2:1:0:347 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.69 HWUSI-EAS1599_1:2:1:0:428 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.69 HWUSI-EAS1599_1:2:1:0:428 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.70 HWUSI-EAS1599_1:2:1:0:473 length=35 ## NNNNNNNNNNNCNGNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.70 HWUSI-EAS1599_1:2:1:0:473 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.71 HWUSI-EAS1599_1:2:1:0:576 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.71 HWUSI-EAS1599_1:2:1:0:576 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.72 HWUSI-EAS1599_1:2:1:0:679 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.72 HWUSI-EAS1599_1:2:1:0:679 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.73 HWUSI-EAS1599_1:2:1:0:691 length=35 ## NNNNNNNNNNNGNGNNANNNNNNNNNNNNNNNNNN ## +SRR098026.73 HWUSI-EAS1599_1:2:1:0:691 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.74 HWUSI-EAS1599_1:2:1:0:912 length=35 ## NNNNNNNNNNNGNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.74 HWUSI-EAS1599_1:2:1:0:912 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.75 HWUSI-EAS1599_1:2:1:0:1047 length=35 ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.75 HWUSI-EAS1599_1:2:1:0:1047 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.76 HWUSI-EAS1599_1:2:1:0:1052 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.76 HWUSI-EAS1599_1:2:1:0:1052 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.77 HWUSI-EAS1599_1:2:1:0:1100 length=35 ## NNNNNNNNNNNTNTNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.77 HWUSI-EAS1599_1:2:1:0:1100 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.78 HWUSI-EAS1599_1:2:1:0:1112 length=35 ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.78 HWUSI-EAS1599_1:2:1:0:1112 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.79 HWUSI-EAS1599_1:2:1:0:1131 length=35 ## NNNNNNNNNNNANANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.79 HWUSI-EAS1599_1:2:1:0:1131 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.80 HWUSI-EAS1599_1:2:1:0:1168 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.80 HWUSI-EAS1599_1:2:1:0:1168 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.81 HWUSI-EAS1599_1:2:1:0:1200 length=35 ## NNNNNNNNNNNCNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.81 HWUSI-EAS1599_1:2:1:0:1200 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.82 HWUSI-EAS1599_1:2:1:0:1251 length=35 ## NNNNNNNNNNNTNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.82 HWUSI-EAS1599_1:2:1:0:1251 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.83 HWUSI-EAS1599_1:2:1:0:1268 length=35 ## NNNNNNNNNNNTNTNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.83 HWUSI-EAS1599_1:2:1:0:1268 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.84 HWUSI-EAS1599_1:2:1:0:1281 length=35 ## NNNNNNNNNNNANGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.84 HWUSI-EAS1599_1:2:1:0:1281 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.85 HWUSI-EAS1599_1:2:1:0:1340 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.85 HWUSI-EAS1599_1:2:1:0:1340 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.86 HWUSI-EAS1599_1:2:1:0:1372 length=35 ## NNNNNNNNNNNTNCNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.86 HWUSI-EAS1599_1:2:1:0:1372 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.87 HWUSI-EAS1599_1:2:1:0:1400 length=35 ## NNNNNNNNNNNANCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.87 HWUSI-EAS1599_1:2:1:0:1400 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.88 HWUSI-EAS1599_1:2:1:0:1425 length=35 ## NNNNNNNNNNNTNGNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.88 HWUSI-EAS1599_1:2:1:0:1425 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.89 HWUSI-EAS1599_1:2:1:0:1437 length=35 ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.89 HWUSI-EAS1599_1:2:1:0:1437 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.90 HWUSI-EAS1599_1:2:1:0:1682 length=35 ## NNNNNNNNNNNTNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.90 HWUSI-EAS1599_1:2:1:0:1682 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.91 HWUSI-EAS1599_1:2:1:0:1690 length=35 ## NNNNNNNNNNNGNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.91 HWUSI-EAS1599_1:2:1:0:1690 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.92 HWUSI-EAS1599_1:2:1:0:1751 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.92 HWUSI-EAS1599_1:2:1:0:1751 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.93 HWUSI-EAS1599_1:2:1:0:1906 length=35 ## NNNNNNNNNNNGNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.93 HWUSI-EAS1599_1:2:1:0:1906 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.94 HWUSI-EAS1599_1:2:1:0:1928 length=35 ## NNNNNNNNNNNTNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.94 HWUSI-EAS1599_1:2:1:0:1928 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.95 HWUSI-EAS1599_1:2:1:0:2028 length=35 ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.95 HWUSI-EAS1599_1:2:1:0:2028 length=35 ## !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ## @SRR098026.96 HWUSI-EAS1599_1:2:1:0:365 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.96 HWUSI-EAS1599_1:2:1:0:365 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.97 HWUSI-EAS1599_1:2:1:0:1779 length=35 ## NNNNNNNNNNNCNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.97 HWUSI-EAS1599_1:2:1:0:1779 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.98 HWUSI-EAS1599_1:2:1:0:1476 length=35 ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.98 HWUSI-EAS1599_1:2:1:0:1476 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.99 HWUSI-EAS1599_1:2:1:0:833 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.99 HWUSI-EAS1599_1:2:1:0:833 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.100 HWUSI-EAS1599_1:2:1:0:662 length=35 ## NNNNNNNNNNNGNGNNCGNNNNNNNNNNNNNCNNN ## +SRR098026.100 HWUSI-EAS1599_1:2:1:0:662 length=35 ## !!!!!!!!!!!#!#!!##!!!!!!!!!!!!!#!!! ## @SRR098026.101 HWUSI-EAS1599_1:2:1:0:91 length=35 ## NNNNNNNNNNNANANAAANNNNNNNNNNNNNANNN ## +SRR098026.101 HWUSI-EAS1599_1:2:1:0:91 length=35 ## !!!!!!!!!!!#!#!###!!!!!!!!!!!!!#!!! ## @SRR098026.102 HWUSI-EAS1599_1:2:1:0:1544 length=35 ## NNNNNNNNNNNANGCGCGNNNNNNNNNNNNNTNNN ## +SRR098026.102 HWUSI-EAS1599_1:2:1:0:1544 length=35 ## !!!!!!!!!!!#!#####!!!!!!!!!!!!!#!!! ## @SRR098026.103 HWUSI-EAS1599_1:2:1:0:1812 length=35 ## NNNNNNNNNNNGNGCCAGNNNNNNNNNNNNNANNN ## +SRR098026.103 HWUSI-EAS1599_1:2:1:0:1812 length=35 ## !!!!!!!!!!!#!#####!!!!!!!!!!!!!#!!! ## @SRR098026.104 HWUSI-EAS1599_1:2:1:0:991 length=35 ## NNNNNNNNNNNGTTCAGCNNNNNNNNNNNNNANNN ## +SRR098026.104 HWUSI-EAS1599_1:2:1:0:991 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.105 HWUSI-EAS1599_1:2:1:0:86 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.105 HWUSI-EAS1599_1:2:1:0:86 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.106 HWUSI-EAS1599_1:2:1:0:1442 length=35 ## NNNNNNNNNNNTGAAATCNNNNNNNNNNNNNCNNN ## +SRR098026.106 HWUSI-EAS1599_1:2:1:0:1442 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.107 HWUSI-EAS1599_1:2:1:0:70 length=35 ## NNNNNNNNNNNTCGCTTCNNNNNNNNNNNNNCNNN ## +SRR098026.107 HWUSI-EAS1599_1:2:1:0:70 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.108 HWUSI-EAS1599_1:2:1:0:284 length=35 ## NNNNNNNNNNNTAAGAGANNNNNNNNNNNNNCNNN ## +SRR098026.108 HWUSI-EAS1599_1:2:1:0:284 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.109 HWUSI-EAS1599_1:2:1:0:1288 length=35 ## NNNNNNNNNNNGCTATCCNNNNNNNNNNNNNGNNN ## +SRR098026.109 HWUSI-EAS1599_1:2:1:0:1288 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.110 HWUSI-EAS1599_1:2:1:0:88 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.110 HWUSI-EAS1599_1:2:1:0:88 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.111 HWUSI-EAS1599_1:2:1:0:1487 length=35 ## NNNNNNNNNNNACAGCGANNNNNNNNNNNNNTNNN ## +SRR098026.111 HWUSI-EAS1599_1:2:1:0:1487 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.112 HWUSI-EAS1599_1:2:1:0:139 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.112 HWUSI-EAS1599_1:2:1:0:139 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.113 HWUSI-EAS1599_1:2:1:0:1628 length=35 ## NNNNNNNNNNNGCTGGCGNNNNNNNNNNNNNANNN ## +SRR098026.113 HWUSI-EAS1599_1:2:1:0:1628 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.114 HWUSI-EAS1599_1:2:1:0:1161 length=35 ## NNNNNNNNNNNGCTACCTNNNNNNNNNNNNNTNNN ## +SRR098026.114 HWUSI-EAS1599_1:2:1:0:1161 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.115 HWUSI-EAS1599_1:2:1:0:1662 length=35 ## NNNNNNNNNNCTGGCCGCNNNNNNNNNNNNNANNN ## +SRR098026.115 HWUSI-EAS1599_1:2:1:0:1662 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.116 HWUSI-EAS1599_1:2:1:0:1 length=35 ## NNNNNNNNNNGCCCGCCCNNNNNNNNNNNNNTNNN ## +SRR098026.116 HWUSI-EAS1599_1:2:1:0:1 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.117 HWUSI-EAS1599_1:2:1:0:502 length=35 ## NNNNNNNNNNCGGATATCNNNNNNNNNNNNNTNNN ## +SRR098026.117 HWUSI-EAS1599_1:2:1:0:502 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.118 HWUSI-EAS1599_1:2:1:0:316 length=35 ## NNNNNNNNNNGTTGATAANNNNNNNNNNNNAGNNN ## +SRR098026.118 HWUSI-EAS1599_1:2:1:0:316 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!##!!! ## @SRR098026.119 HWUSI-EAS1599_1:2:1:0:361 length=35 ## NNNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## +SRR098026.119 HWUSI-EAS1599_1:2:1:0:361 length=35 ## !!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.120 HWUSI-EAS1599_1:2:1:0:775 length=35 ## GNNNNNNNNNGCTGAAAAANNNNNNNNNNNCANNN ## +SRR098026.120 HWUSI-EAS1599_1:2:1:0:775 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.121 HWUSI-EAS1599_1:2:1:0:1322 length=35 ## CNNNNNNNNNTACATCTGGNNNNNNNNNNNCGNNN ## +SRR098026.121 HWUSI-EAS1599_1:2:1:0:1322 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.122 HWUSI-EAS1599_1:2:1:0:1411 length=35 ## ANNNNNNNNNCAATTTCCTNNNNNNNNNNNACNNN ## +SRR098026.122 HWUSI-EAS1599_1:2:1:0:1411 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.123 HWUSI-EAS1599_1:2:1:0:1948 length=35 ## CNNNNNNNNNGTATTCACANNNNNNNNNNNTTNNN ## +SRR098026.123 HWUSI-EAS1599_1:2:1:0:1948 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.124 HWUSI-EAS1599_1:2:1:0:605 length=35 ## CNNNNNNNNNAGGCGTTGCNNNNNNNNNNNCTNNN ## +SRR098026.124 HWUSI-EAS1599_1:2:1:0:605 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.125 HWUSI-EAS1599_1:2:1:0:529 length=35 ## TNNNNNNNNNTAAAATAAANNNNNNNNNNNAANNN ## +SRR098026.125 HWUSI-EAS1599_1:2:1:0:529 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.126 HWUSI-EAS1599_1:2:1:0:1710 length=35 ## CNNNNNNNNNTTGGTGCTGNNNNNNNNNNNAANNN ## +SRR098026.126 HWUSI-EAS1599_1:2:1:0:1710 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.127 HWUSI-EAS1599_1:2:1:0:795 length=35 ## ANNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## +SRR098026.127 HWUSI-EAS1599_1:2:1:0:795 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.128 HWUSI-EAS1599_1:2:1:0:548 length=35 ## GNNNNNNNNNTGGCACAATNNNNNNNNNNNCGNNN ## +SRR098026.128 HWUSI-EAS1599_1:2:1:0:548 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.129 HWUSI-EAS1599_1:2:1:0:1824 length=35 ## TNNNNNNNNNCGTGGAATTNNNNNNNNNNNATNNN ## +SRR098026.129 HWUSI-EAS1599_1:2:1:0:1824 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.130 HWUSI-EAS1599_1:2:1:0:150 length=35 ## ANNNNNNNNNGCATTAAACGNNNNNNNNNNCANTN ## +SRR098026.130 HWUSI-EAS1599_1:2:1:0:150 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.131 HWUSI-EAS1599_1:2:1:0:224 length=35 ## GNNNNNNNNNATCAAAAAGCNNNNNNNNNNGTNAN ## +SRR098026.131 HWUSI-EAS1599_1:2:1:0:224 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.132 HWUSI-EAS1599_1:2:1:0:320 length=35 ## ANNNNNNNNNGTGGCAATATNNNNNNNNNNCCNGN ## +SRR098026.132 HWUSI-EAS1599_1:2:1:0:320 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## ANNNNNNNNNTTCAGCGACTNNNNNNNNNNGTNGN ## +SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## -- ## @SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! One of the sets of lines returned by this command is: @SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN +SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 5.4 Exercise Search for the sequence GNATNACCACTTCC in the SRR098026.fastq file. Have your search return all matching lines and the name (or identifier) for each sequence that contains a match. Search for the sequence AAGTT in both FASTQ files. Have your search return all matching lines and the name (or identifier) for each sequence that contains a match. 5.5 Solution 5.6 Redirecting output grep allowed us to identify sequences in our FASTQ files that match a particular pattern. All of these sequences were printed to our terminal screen, but in order to work with these sequences and perform other operations on them, we will need to capture that output in some way. We can do this with something called “redirection”. The idea is that we are taking what would ordinarily be printed to the terminal screen and redirecting it to another location. In our case, we want to print this information to a file so that we can look at it later and use other commands to analyze this data. The command for redirecting output to a file is ``. Let’s try out this command and copy all the records (including all four lines of each record) in our FASTQ files that contain ‘NNNNNNNNNN’ to another file called &gt; bad_reads.txt. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq &gt; bad_reads.txt 5.7 File extensions You might be confused about why we’re naming our output file with a .txt extension. After all, it will be holding FASTQ formatted data that we’re extracting from our FASTQ files. Won’t it also be a FASTQ file? The answer is, yes - it will be a FASTQ file and it would make sense to name it with a .fastq extension. However, using a .fastq extension will lead us to problems when we move to using wildcards later in this episode. We’ll point out where this becomes important. For now, it’s good that you’re thinking about file extensions! The prompt should sit there a little bit, and then it should look like nothing happened. But type ls. You should see a new file called &gt; bad_reads.txt. We can check the number of lines in our new file using a command called wc. wc stands for word count. This command counts the number of words, lines, and characters in a file. cd ~/shell_data/untrimmed_fastq/ wc bad_reads.txt ## 537 1073 23217 bad_reads.txt This will tell us the number of lines, words and characters in the file. If we want only the number of lines, we can use the -l flag for lines. cd ~/shell_data/untrimmed_fastq/ wc -l bad_reads.txt ## 537 bad_reads.txt 5.8 Exercise How many sequences are there in SRR098026.fastq? Remember that every sequence is formed by four lines. 5.9 Solution 5.10 Exercise How many sequences in SRR098026.fastq contain at least 3 consecutive Ns? 5.11 Solution We might want to search multiple FASTQ files for sequences that match our search pattern. However, we need to be careful, because each time we use the &gt; command to redirect output to a file, the new output will replace the output that was already present in the file. This is called “overwriting” and, just like you don’t want to overwrite your video recording of your kid’s first birthday party, you also want to avoid overwriting your data files. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq &gt; bad_reads.txt wc -l bad_reads.txt ## 537 bad_reads.txt cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR097977.fastq &gt; bad_reads.txt wc -l bad_reads.txt ## 0 bad_reads.txt Here, the output of our second call to wc shows that we no longer have any lines in our bad_reads.txt file. This is because the second file we searched (SRR097977.fastq) does not contain any lines that match our search sequence. So our file was overwritten and is now empty. We can avoid overwriting our files by using the command &gt;&gt;. &gt;&gt; is known as the “append redirect” and will append new output to the end of a file, rather than overwriting it. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq &gt; bad_reads.txt wc -l bad_reads.txt ## 537 bad_reads.txt cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR097977.fastq &gt;&gt; bad_reads.txt wc -l bad_reads.txt ## 537 bad_reads.txt The output of our second call to wc shows that we have not overwritten our original data. We can also do this with a single line of code by using a wildcard: cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN *.fastq &gt; bad_reads.txt wc -l bad_reads.txt ## 537 bad_reads.txt 5.12 File extensions - part 2 This is where we would have trouble if we were naming our output file with a .fastq extension. If we already had a file called bad_reads.fastq (from our previous grep practice) and then ran the command above using a .fastq extension instead of a .txt extension, grep would give us a warning. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN *.fastq &gt; bad_reads.fastq grep: input file ‘bad_reads.fastq’ is also the output grep is letting you know that the output file bad_reads.fastq is also included in your grep call because it matches the *.fastq pattern. Be careful with this as it can lead to some unintended results. Since we might have multiple different criteria we want to search for, creating a new output file each time has the potential to clutter up our workspace. We also thus far haven’t been interested in the actual contents of those files, only in the number of reads that we’ve found. We created the files to store the reads and then counted the lines in the file to see how many reads matched our criteria. There’s a way to do this, however, that doesn’t require us to create these intermediate files - the pipe command (|). This is probably not a key on your keyboard you use very much, so let’s all take a minute to find that key. For the standard QWERTY keyboard layout, the | character can be found using the key combination &lt;kbdShift&lt;/kbd+&lt;kbd&lt;/kbd What | does is take the output that is scrolling by on the terminal and uses that output as input to another command. When our output was scrolling by, we might have wished we could slow it down and look at it, like we can with less. Well it turns out that we can! We can redirect our output from our grep call through the less command. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq | less ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.2 HWUSI-EAS1599_1:2:1:0:312 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.2 HWUSI-EAS1599_1:2:1:0:312 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.3 HWUSI-EAS1599_1:2:1:0:570 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.3 HWUSI-EAS1599_1:2:1:0:570 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.4 HWUSI-EAS1599_1:2:1:0:758 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.4 HWUSI-EAS1599_1:2:1:0:758 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.5 HWUSI-EAS1599_1:2:1:0:874 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.5 HWUSI-EAS1599_1:2:1:0:874 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.6 HWUSI-EAS1599_1:2:1:0:176 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.6 HWUSI-EAS1599_1:2:1:0:176 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.7 HWUSI-EAS1599_1:2:1:0:206 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.7 HWUSI-EAS1599_1:2:1:0:206 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.8 HWUSI-EAS1599_1:2:1:0:227 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.8 HWUSI-EAS1599_1:2:1:0:227 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.9 HWUSI-EAS1599_1:2:1:0:262 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.9 HWUSI-EAS1599_1:2:1:0:262 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.10 HWUSI-EAS1599_1:2:1:0:500 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.10 HWUSI-EAS1599_1:2:1:0:500 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.11 HWUSI-EAS1599_1:2:1:0:542 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.11 HWUSI-EAS1599_1:2:1:0:542 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.12 HWUSI-EAS1599_1:2:1:0:573 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.12 HWUSI-EAS1599_1:2:1:0:573 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.13 HWUSI-EAS1599_1:2:1:0:578 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.13 HWUSI-EAS1599_1:2:1:0:578 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.14 HWUSI-EAS1599_1:2:1:0:639 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.14 HWUSI-EAS1599_1:2:1:0:639 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.15 HWUSI-EAS1599_1:2:1:0:721 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.15 HWUSI-EAS1599_1:2:1:0:721 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.16 HWUSI-EAS1599_1:2:1:0:742 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.16 HWUSI-EAS1599_1:2:1:0:742 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.17 HWUSI-EAS1599_1:2:1:0:814 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.17 HWUSI-EAS1599_1:2:1:0:814 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.18 HWUSI-EAS1599_1:2:1:0:852 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.18 HWUSI-EAS1599_1:2:1:0:852 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.19 HWUSI-EAS1599_1:2:1:0:940 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.19 HWUSI-EAS1599_1:2:1:0:940 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.20 HWUSI-EAS1599_1:2:1:0:979 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.20 HWUSI-EAS1599_1:2:1:0:979 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.21 HWUSI-EAS1599_1:2:1:0:982 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.21 HWUSI-EAS1599_1:2:1:0:982 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.22 HWUSI-EAS1599_1:2:1:0:999 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.22 HWUSI-EAS1599_1:2:1:0:999 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.23 HWUSI-EAS1599_1:2:1:0:1005 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.23 HWUSI-EAS1599_1:2:1:0:1005 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.24 HWUSI-EAS1599_1:2:1:0:1009 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.24 HWUSI-EAS1599_1:2:1:0:1009 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.25 HWUSI-EAS1599_1:2:1:0:1027 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.25 HWUSI-EAS1599_1:2:1:0:1027 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.26 HWUSI-EAS1599_1:2:1:0:1062 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.26 HWUSI-EAS1599_1:2:1:0:1062 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.27 HWUSI-EAS1599_1:2:1:0:1134 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.27 HWUSI-EAS1599_1:2:1:0:1134 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.28 HWUSI-EAS1599_1:2:1:0:1203 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.28 HWUSI-EAS1599_1:2:1:0:1203 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.29 HWUSI-EAS1599_1:2:1:0:1300 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.29 HWUSI-EAS1599_1:2:1:0:1300 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.30 HWUSI-EAS1599_1:2:1:0:1310 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.30 HWUSI-EAS1599_1:2:1:0:1310 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.31 HWUSI-EAS1599_1:2:1:0:1452 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.31 HWUSI-EAS1599_1:2:1:0:1452 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.32 HWUSI-EAS1599_1:2:1:0:1466 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.32 HWUSI-EAS1599_1:2:1:0:1466 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.33 HWUSI-EAS1599_1:2:1:0:1571 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.33 HWUSI-EAS1599_1:2:1:0:1571 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.34 HWUSI-EAS1599_1:2:1:0:1618 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.34 HWUSI-EAS1599_1:2:1:0:1618 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.35 HWUSI-EAS1599_1:2:1:0:1654 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.35 HWUSI-EAS1599_1:2:1:0:1654 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.36 HWUSI-EAS1599_1:2:1:0:1670 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.36 HWUSI-EAS1599_1:2:1:0:1670 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.37 HWUSI-EAS1599_1:2:1:0:1716 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.37 HWUSI-EAS1599_1:2:1:0:1716 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.38 HWUSI-EAS1599_1:2:1:0:1746 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.38 HWUSI-EAS1599_1:2:1:0:1746 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.39 HWUSI-EAS1599_1:2:1:0:1762 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.39 HWUSI-EAS1599_1:2:1:0:1762 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.40 HWUSI-EAS1599_1:2:1:0:1879 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.40 HWUSI-EAS1599_1:2:1:0:1879 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.41 HWUSI-EAS1599_1:2:1:0:1896 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.41 HWUSI-EAS1599_1:2:1:0:1896 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.42 HWUSI-EAS1599_1:2:1:0:1914 length=35 ## NNNNNNNNNNNNNNNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.42 HWUSI-EAS1599_1:2:1:0:1914 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.43 HWUSI-EAS1599_1:2:1:0:1941 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.43 HWUSI-EAS1599_1:2:1:0:1941 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.44 HWUSI-EAS1599_1:2:1:0:1983 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.44 HWUSI-EAS1599_1:2:1:0:1983 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.45 HWUSI-EAS1599_1:2:1:0:1987 length=35 ## NNNNNNNNNNNNNNNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.45 HWUSI-EAS1599_1:2:1:0:1987 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.46 HWUSI-EAS1599_1:2:1:0:2034 length=35 ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.46 HWUSI-EAS1599_1:2:1:0:2034 length=35 ## !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ## @SRR098026.47 HWUSI-EAS1599_1:2:1:0:215 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.47 HWUSI-EAS1599_1:2:1:0:215 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.48 HWUSI-EAS1599_1:2:1:0:145 length=35 ## NNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNN ## +SRR098026.48 HWUSI-EAS1599_1:2:1:0:145 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.49 HWUSI-EAS1599_1:2:1:0:1593 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.49 HWUSI-EAS1599_1:2:1:0:1593 length=35 ## !!!!!!!!!!!!!!!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.50 HWUSI-EAS1599_1:2:1:0:1583 length=35 ## NNNNNNNNNNNNNTNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.50 HWUSI-EAS1599_1:2:1:0:1583 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.51 HWUSI-EAS1599_1:2:1:0:120 length=35 ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.51 HWUSI-EAS1599_1:2:1:0:120 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.52 HWUSI-EAS1599_1:2:1:0:158 length=35 ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.52 HWUSI-EAS1599_1:2:1:0:158 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.53 HWUSI-EAS1599_1:2:1:0:1588 length=35 ## NNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.53 HWUSI-EAS1599_1:2:1:0:1588 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.54 HWUSI-EAS1599_1:2:1:0:257 length=35 ## NNNNNNNNNNNNNANNTNNNNNNNNNNNNNNNNNN ## +SRR098026.54 HWUSI-EAS1599_1:2:1:0:257 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.55 HWUSI-EAS1599_1:2:1:0:513 length=35 ## NNNNNNNNNNNNNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.55 HWUSI-EAS1599_1:2:1:0:513 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.56 HWUSI-EAS1599_1:2:1:0:558 length=35 ## NNNNNNNNNNNNNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.56 HWUSI-EAS1599_1:2:1:0:558 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.57 HWUSI-EAS1599_1:2:1:0:1382 length=35 ## NNNNNNNNNNNNNANNGNNNNNNNNNNNNNNNNNN ## +SRR098026.57 HWUSI-EAS1599_1:2:1:0:1382 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.58 HWUSI-EAS1599_1:2:1:0:454 length=35 ## NNNNNNNNNNNNNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.58 HWUSI-EAS1599_1:2:1:0:454 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.59 HWUSI-EAS1599_1:2:1:0:324 length=35 ## NNNNNNNNNNNNNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.59 HWUSI-EAS1599_1:2:1:0:324 length=35 ## !!!!!!!!!!!!!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.60 HWUSI-EAS1599_1:2:1:0:546 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.60 HWUSI-EAS1599_1:2:1:0:546 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.61 HWUSI-EAS1599_1:2:1:0:1862 length=35 ## NNNNNNNNNNNANCNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.61 HWUSI-EAS1599_1:2:1:0:1862 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.62 HWUSI-EAS1599_1:2:1:0:7 length=35 ## NNNNNNNNNNNCNANNTNNNNNNNNNNNNNNNNNN ## +SRR098026.62 HWUSI-EAS1599_1:2:1:0:7 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.63 HWUSI-EAS1599_1:2:1:0:50 length=35 ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.63 HWUSI-EAS1599_1:2:1:0:50 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.64 HWUSI-EAS1599_1:2:1:0:56 length=35 ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.64 HWUSI-EAS1599_1:2:1:0:56 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.65 HWUSI-EAS1599_1:2:1:0:210 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.65 HWUSI-EAS1599_1:2:1:0:210 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.66 HWUSI-EAS1599_1:2:1:0:287 length=35 ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.66 HWUSI-EAS1599_1:2:1:0:287 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.67 HWUSI-EAS1599_1:2:1:0:335 length=35 ## NNNNNNNNNNNTNANNANNNNNNNNNNNNNNNNNN ## +SRR098026.67 HWUSI-EAS1599_1:2:1:0:335 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.68 HWUSI-EAS1599_1:2:1:0:347 length=35 ## NNNNNNNNNNNGNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.68 HWUSI-EAS1599_1:2:1:0:347 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.69 HWUSI-EAS1599_1:2:1:0:428 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.69 HWUSI-EAS1599_1:2:1:0:428 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.70 HWUSI-EAS1599_1:2:1:0:473 length=35 ## NNNNNNNNNNNCNGNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.70 HWUSI-EAS1599_1:2:1:0:473 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.71 HWUSI-EAS1599_1:2:1:0:576 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.71 HWUSI-EAS1599_1:2:1:0:576 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.72 HWUSI-EAS1599_1:2:1:0:679 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.72 HWUSI-EAS1599_1:2:1:0:679 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.73 HWUSI-EAS1599_1:2:1:0:691 length=35 ## NNNNNNNNNNNGNGNNANNNNNNNNNNNNNNNNNN ## +SRR098026.73 HWUSI-EAS1599_1:2:1:0:691 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.74 HWUSI-EAS1599_1:2:1:0:912 length=35 ## NNNNNNNNNNNGNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.74 HWUSI-EAS1599_1:2:1:0:912 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.75 HWUSI-EAS1599_1:2:1:0:1047 length=35 ## NNNNNNNNNNNTNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.75 HWUSI-EAS1599_1:2:1:0:1047 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.76 HWUSI-EAS1599_1:2:1:0:1052 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.76 HWUSI-EAS1599_1:2:1:0:1052 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.77 HWUSI-EAS1599_1:2:1:0:1100 length=35 ## NNNNNNNNNNNTNTNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.77 HWUSI-EAS1599_1:2:1:0:1100 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.78 HWUSI-EAS1599_1:2:1:0:1112 length=35 ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.78 HWUSI-EAS1599_1:2:1:0:1112 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.79 HWUSI-EAS1599_1:2:1:0:1131 length=35 ## NNNNNNNNNNNANANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.79 HWUSI-EAS1599_1:2:1:0:1131 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.80 HWUSI-EAS1599_1:2:1:0:1168 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.80 HWUSI-EAS1599_1:2:1:0:1168 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.81 HWUSI-EAS1599_1:2:1:0:1200 length=35 ## NNNNNNNNNNNCNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.81 HWUSI-EAS1599_1:2:1:0:1200 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.82 HWUSI-EAS1599_1:2:1:0:1251 length=35 ## NNNNNNNNNNNTNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.82 HWUSI-EAS1599_1:2:1:0:1251 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.83 HWUSI-EAS1599_1:2:1:0:1268 length=35 ## NNNNNNNNNNNTNTNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.83 HWUSI-EAS1599_1:2:1:0:1268 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.84 HWUSI-EAS1599_1:2:1:0:1281 length=35 ## NNNNNNNNNNNANGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.84 HWUSI-EAS1599_1:2:1:0:1281 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.85 HWUSI-EAS1599_1:2:1:0:1340 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.85 HWUSI-EAS1599_1:2:1:0:1340 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.86 HWUSI-EAS1599_1:2:1:0:1372 length=35 ## NNNNNNNNNNNTNCNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.86 HWUSI-EAS1599_1:2:1:0:1372 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.87 HWUSI-EAS1599_1:2:1:0:1400 length=35 ## NNNNNNNNNNNANCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.87 HWUSI-EAS1599_1:2:1:0:1400 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.88 HWUSI-EAS1599_1:2:1:0:1425 length=35 ## NNNNNNNNNNNTNGNNGNNNNNNNNNNNNNNNNNN ## +SRR098026.88 HWUSI-EAS1599_1:2:1:0:1425 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.89 HWUSI-EAS1599_1:2:1:0:1437 length=35 ## NNNNNNNNNNNCNANNCNNNNNNNNNNNNNNNNNN ## +SRR098026.89 HWUSI-EAS1599_1:2:1:0:1437 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.90 HWUSI-EAS1599_1:2:1:0:1682 length=35 ## NNNNNNNNNNNTNCNNANNNNNNNNNNNNNNNNNN ## +SRR098026.90 HWUSI-EAS1599_1:2:1:0:1682 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.91 HWUSI-EAS1599_1:2:1:0:1690 length=35 ## NNNNNNNNNNNGNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.91 HWUSI-EAS1599_1:2:1:0:1690 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.92 HWUSI-EAS1599_1:2:1:0:1751 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.92 HWUSI-EAS1599_1:2:1:0:1751 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.93 HWUSI-EAS1599_1:2:1:0:1906 length=35 ## NNNNNNNNNNNGNCNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.93 HWUSI-EAS1599_1:2:1:0:1906 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.94 HWUSI-EAS1599_1:2:1:0:1928 length=35 ## NNNNNNNNNNNTNTNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.94 HWUSI-EAS1599_1:2:1:0:1928 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.95 HWUSI-EAS1599_1:2:1:0:2028 length=35 ## NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.95 HWUSI-EAS1599_1:2:1:0:2028 length=35 ## !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ## @SRR098026.96 HWUSI-EAS1599_1:2:1:0:365 length=35 ## NNNNNNNNNNNANANNANNNNNNNNNNNNNNNNNN ## +SRR098026.96 HWUSI-EAS1599_1:2:1:0:365 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.97 HWUSI-EAS1599_1:2:1:0:1779 length=35 ## NNNNNNNNNNNCNGNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.97 HWUSI-EAS1599_1:2:1:0:1779 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.98 HWUSI-EAS1599_1:2:1:0:1476 length=35 ## NNNNNNNNNNNCNGNNCNNNNNNNNNNNNNNNNNN ## +SRR098026.98 HWUSI-EAS1599_1:2:1:0:1476 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.99 HWUSI-EAS1599_1:2:1:0:833 length=35 ## NNNNNNNNNNNCNCNNTNNNNNNNNNNNNNNNNNN ## +SRR098026.99 HWUSI-EAS1599_1:2:1:0:833 length=35 ## !!!!!!!!!!!#!#!!#!!!!!!!!!!!!!!!!!! ## @SRR098026.100 HWUSI-EAS1599_1:2:1:0:662 length=35 ## NNNNNNNNNNNGNGNNCGNNNNNNNNNNNNNCNNN ## +SRR098026.100 HWUSI-EAS1599_1:2:1:0:662 length=35 ## !!!!!!!!!!!#!#!!##!!!!!!!!!!!!!#!!! ## @SRR098026.101 HWUSI-EAS1599_1:2:1:0:91 length=35 ## NNNNNNNNNNNANANAAANNNNNNNNNNNNNANNN ## +SRR098026.101 HWUSI-EAS1599_1:2:1:0:91 length=35 ## !!!!!!!!!!!#!#!###!!!!!!!!!!!!!#!!! ## @SRR098026.102 HWUSI-EAS1599_1:2:1:0:1544 length=35 ## NNNNNNNNNNNANGCGCGNNNNNNNNNNNNNTNNN ## +SRR098026.102 HWUSI-EAS1599_1:2:1:0:1544 length=35 ## !!!!!!!!!!!#!#####!!!!!!!!!!!!!#!!! ## @SRR098026.103 HWUSI-EAS1599_1:2:1:0:1812 length=35 ## NNNNNNNNNNNGNGCCAGNNNNNNNNNNNNNANNN ## +SRR098026.103 HWUSI-EAS1599_1:2:1:0:1812 length=35 ## !!!!!!!!!!!#!#####!!!!!!!!!!!!!#!!! ## @SRR098026.104 HWUSI-EAS1599_1:2:1:0:991 length=35 ## NNNNNNNNNNNGTTCAGCNNNNNNNNNNNNNANNN ## +SRR098026.104 HWUSI-EAS1599_1:2:1:0:991 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.105 HWUSI-EAS1599_1:2:1:0:86 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.105 HWUSI-EAS1599_1:2:1:0:86 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.106 HWUSI-EAS1599_1:2:1:0:1442 length=35 ## NNNNNNNNNNNTGAAATCNNNNNNNNNNNNNCNNN ## +SRR098026.106 HWUSI-EAS1599_1:2:1:0:1442 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.107 HWUSI-EAS1599_1:2:1:0:70 length=35 ## NNNNNNNNNNNTCGCTTCNNNNNNNNNNNNNCNNN ## +SRR098026.107 HWUSI-EAS1599_1:2:1:0:70 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.108 HWUSI-EAS1599_1:2:1:0:284 length=35 ## NNNNNNNNNNNTAAGAGANNNNNNNNNNNNNCNNN ## +SRR098026.108 HWUSI-EAS1599_1:2:1:0:284 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.109 HWUSI-EAS1599_1:2:1:0:1288 length=35 ## NNNNNNNNNNNGCTATCCNNNNNNNNNNNNNGNNN ## +SRR098026.109 HWUSI-EAS1599_1:2:1:0:1288 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.110 HWUSI-EAS1599_1:2:1:0:88 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.110 HWUSI-EAS1599_1:2:1:0:88 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.111 HWUSI-EAS1599_1:2:1:0:1487 length=35 ## NNNNNNNNNNNACAGCGANNNNNNNNNNNNNTNNN ## +SRR098026.111 HWUSI-EAS1599_1:2:1:0:1487 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.112 HWUSI-EAS1599_1:2:1:0:139 length=35 ## NNNNNNNNNNNAAAAAAANNNNNNNNNNNNNANNN ## +SRR098026.112 HWUSI-EAS1599_1:2:1:0:139 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.113 HWUSI-EAS1599_1:2:1:0:1628 length=35 ## NNNNNNNNNNNGCTGGCGNNNNNNNNNNNNNANNN ## +SRR098026.113 HWUSI-EAS1599_1:2:1:0:1628 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.114 HWUSI-EAS1599_1:2:1:0:1161 length=35 ## NNNNNNNNNNNGCTACCTNNNNNNNNNNNNNTNNN ## +SRR098026.114 HWUSI-EAS1599_1:2:1:0:1161 length=35 ## !!!!!!!!!!!#######!!!!!!!!!!!!!#!!! ## @SRR098026.115 HWUSI-EAS1599_1:2:1:0:1662 length=35 ## NNNNNNNNNNCTGGCCGCNNNNNNNNNNNNNANNN ## +SRR098026.115 HWUSI-EAS1599_1:2:1:0:1662 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.116 HWUSI-EAS1599_1:2:1:0:1 length=35 ## NNNNNNNNNNGCCCGCCCNNNNNNNNNNNNNTNNN ## +SRR098026.116 HWUSI-EAS1599_1:2:1:0:1 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.117 HWUSI-EAS1599_1:2:1:0:502 length=35 ## NNNNNNNNNNCGGATATCNNNNNNNNNNNNNTNNN ## +SRR098026.117 HWUSI-EAS1599_1:2:1:0:502 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!!#!!! ## @SRR098026.118 HWUSI-EAS1599_1:2:1:0:316 length=35 ## NNNNNNNNNNGTTGATAANNNNNNNNNNNNAGNNN ## +SRR098026.118 HWUSI-EAS1599_1:2:1:0:316 length=35 ## !!!!!!!!!!########!!!!!!!!!!!!##!!! ## @SRR098026.119 HWUSI-EAS1599_1:2:1:0:361 length=35 ## NNNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## +SRR098026.119 HWUSI-EAS1599_1:2:1:0:361 length=35 ## !!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.120 HWUSI-EAS1599_1:2:1:0:775 length=35 ## GNNNNNNNNNGCTGAAAAANNNNNNNNNNNCANNN ## +SRR098026.120 HWUSI-EAS1599_1:2:1:0:775 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.121 HWUSI-EAS1599_1:2:1:0:1322 length=35 ## CNNNNNNNNNTACATCTGGNNNNNNNNNNNCGNNN ## +SRR098026.121 HWUSI-EAS1599_1:2:1:0:1322 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.122 HWUSI-EAS1599_1:2:1:0:1411 length=35 ## ANNNNNNNNNCAATTTCCTNNNNNNNNNNNACNNN ## +SRR098026.122 HWUSI-EAS1599_1:2:1:0:1411 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.123 HWUSI-EAS1599_1:2:1:0:1948 length=35 ## CNNNNNNNNNGTATTCACANNNNNNNNNNNTTNNN ## +SRR098026.123 HWUSI-EAS1599_1:2:1:0:1948 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.124 HWUSI-EAS1599_1:2:1:0:605 length=35 ## CNNNNNNNNNAGGCGTTGCNNNNNNNNNNNCTNNN ## +SRR098026.124 HWUSI-EAS1599_1:2:1:0:605 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.125 HWUSI-EAS1599_1:2:1:0:529 length=35 ## TNNNNNNNNNTAAAATAAANNNNNNNNNNNAANNN ## +SRR098026.125 HWUSI-EAS1599_1:2:1:0:529 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.126 HWUSI-EAS1599_1:2:1:0:1710 length=35 ## CNNNNNNNNNTTGGTGCTGNNNNNNNNNNNAANNN ## +SRR098026.126 HWUSI-EAS1599_1:2:1:0:1710 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.127 HWUSI-EAS1599_1:2:1:0:795 length=35 ## ANNNNNNNNNAAAAAAAAANNNNNNNNNNNAANNN ## +SRR098026.127 HWUSI-EAS1599_1:2:1:0:795 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.128 HWUSI-EAS1599_1:2:1:0:548 length=35 ## GNNNNNNNNNTGGCACAATNNNNNNNNNNNCGNNN ## +SRR098026.128 HWUSI-EAS1599_1:2:1:0:548 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.129 HWUSI-EAS1599_1:2:1:0:1824 length=35 ## TNNNNNNNNNCGTGGAATTNNNNNNNNNNNATNNN ## +SRR098026.129 HWUSI-EAS1599_1:2:1:0:1824 length=35 ## #!!!!!!!!!#########!!!!!!!!!!!##!!! ## @SRR098026.130 HWUSI-EAS1599_1:2:1:0:150 length=35 ## ANNNNNNNNNGCATTAAACGNNNNNNNNNNCANTN ## +SRR098026.130 HWUSI-EAS1599_1:2:1:0:150 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.131 HWUSI-EAS1599_1:2:1:0:224 length=35 ## GNNNNNNNNNATCAAAAAGCNNNNNNNNNNGTNAN ## +SRR098026.131 HWUSI-EAS1599_1:2:1:0:224 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.132 HWUSI-EAS1599_1:2:1:0:320 length=35 ## ANNNNNNNNNGTGGCAATATNNNNNNNNNNCCNGN ## +SRR098026.132 HWUSI-EAS1599_1:2:1:0:320 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## ANNNNNNNNNTTCAGCGACTNNNNNNNNNNGTNGN ## +SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## -- ## @SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! We can now see the output from our grep call within the less interface. We can use the up and down arrows to scroll through the output and use q to exit less. If we don’t want to create a file before counting lines of output from our grep search, we could directly pipe the output of the grep search to the command wc -l. This can be helpful for investigating your output if you are not sure you would like to save it to a file. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq | wc -l ## 537 Because we asked grep for all four lines of each FASTQ record, we need to divide the output by four to get the number of sequences that match our search pattern. Since 802 / 4 = 200.5 and we are expecting an integer number of records, there is something added or missing in &gt; bad_reads.txt. If we explore &gt; bad_reads.txt using less, we might be able to notice what is causing the uneven number of lines. Luckily, this issue happens by the end of the file so we can also spot it with tail. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq &gt; bad_reads.txt tail bad_reads.txt ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## ANNNNNNNNNTTCAGCGACTNNNNNNNNNNGTNGN ## +SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## -- ## @SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! The sixth line in the output displays “–” which is the default action for grep to separate groups of lines matching the pattern, and indicate groups of lines which did not match the pattern so are not displayed. To fix this issue, we can redirect the output of grep to a second instance of grep as follows. cd ~/shell_data/untrimmed_fastq/ grep -B1 -A2 NNNNNNNNNN SRR098026.fastq | grep -v &#39;^--&#39; &gt; bad_reads.txt tail bad_reads.txt ## +SRR098026.132 HWUSI-EAS1599_1:2:1:0:320 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## ANNNNNNNNNTTCAGCGACTNNNNNNNNNNGTNGN ## +SRR098026.133 HWUSI-EAS1599_1:2:1:0:1978 length=35 ## #!!!!!!!!!##########!!!!!!!!!!##!#! ## @SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## CNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN ## +SRR098026.177 HWUSI-EAS1599_1:2:1:1:2025 length=35 ## #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! The -v option in the second grep search stands for --invert-match meaning grep will now only display the lines which do not match the searched pattern, in this case '^--'. The caret (^) is an anchoring character matching the beginning of the line, and the pattern has to be enclose by single quotes so grep does not interpret the pattern as an extended option (starting with –). 5.13 Custom grep control Use man grep to read more about other options to customize the output of grep including extended options, anchoring characters, and much more. Redirecting output is often not intuitive, and can take some time to get used to. Once you’re comfortable with redirection, however, you’ll be able to combine any number of commands to do all sorts of exciting things with your data! None of the command line programs we’ve been learning do anything all that impressive on their own, but when you start chaining them together, you can do some really powerful things very efficiently. 5.14 File manipulation and more practices with pipes To practice a bit more with the tools we’ve added to our tool kit so far and learn a few extra ones you can follow this extra lesson which uses the SRA metadata file. 5.15 Writing for loops Loops are key to productivity improvements through automation as they allow us to execute commands repeatedly. Similar to wildcards and tab completion, using loops also reduces the amount of typing (and typing mistakes). Loops are helpful when performing operations on groups of sequencing files, such as unzipping or trimming multiple files. We will use loops for these purposes in subsequent analyses, but will cover the basics of them for now. When the shell sees the keyword for, it knows to repeat a command (or group of commands) once for each item in a list. Each time the loop runs (called an iteration), an item in the list is assigned in sequence to the variable, and the commands inside the loop are executed, before moving on to the next item in the list. Inside the loop, we call for the variable’s value by putting $ in front of it. The $ tells the shell interpreter to treat the variable as a variable name and substitute its value in its place, rather than treat it as text or an external command. In shell programming, this is usually called “expanding” the variable. Sometimes, we want to expand a variable without any whitespace to its right. Suppose we have a variable named foo that contains the text abc, and would like to expand foo to create the text abcEFG. foo=abc echo foo is $foo echo foo is $fooEFG # doesn&#39;t work The interpreter is trying to expand a variable named fooEFG, which (probably) doesn’t exist. We can avoid this problem by enclosing the variable name in braces ({ and }, sometimes called “squiggle braces”). bash treats the # character as a comment character. Any text on a line after a # is ignored by bash when evaluating the text as code. foo=abc echo foo is $foo echo foo is ${foo}EFG ## foo is abc ## foo is abcEFG now it works! Let’s write a for loop to show us the first two lines of the fastq files we downloaded earlier. You will notice the shell prompt changes from $ to `and back again as we were typing in our loop. The second prompt,&gt;, is different to remind us that we haven’t finished typing a complete command yet. A semicolon,;`, can be used to separate two commands written on a single line. cd ~/shell_data/untrimmed_fastq/ for filename in *.fastq do head -n 2 ${filename} done ## @SRR097977.1 209DTAAXX_Lenski2_1_7:8:3:710:178 length=36 ## TATTCTGCCATAATGAAATTCGCCACTTGTTAGTGT ## @SRR098026.1 HWUSI-EAS1599_1:2:1:0:968 length=35 ## NNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNN The for loop begins with the formula for &lt;variablein &lt;group to iterate over. In this case, the word filename is designated &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD as the variable to be used over each iteration. In our case SRR097977.fastq and SRR098026.fastq will be substituted for filename ======= as the variable to be used over each iteration. In our case SRR098026.fastq and SRR097977.fastq will be substituted for filename &gt;&gt;&gt;&gt;&gt;&gt;&gt; 63d3bc2 (first commit) because they fit the pattern of ending with .fastq in the directory we’ve specified. The next line of the for loop is do. The next line is the code that we want to execute. We are telling the loop to print the first two lines of each variable we iterate over. Finally, the word done ends the loop. After executing the loop, you should see the first two lines of both fastq files printed to the terminal. Let’s create a loop that will save this information to a file. cd ~/shell_data/untrimmed_fastq/ for filename in *.fastq do head -n 2 ${filename} &gt; seq_info.txt done When writing a loop, you will not be able to return to previous lines once you have pressed Enter. Remember that we can cancel the current command using &lt;kbdCtrl&lt;/kbd+&lt;kbdC&lt;/kbd If you notice a mistake that is going to prevent your loop for executing correctly. Note that we are using &gt; to append the text to our seq_info.txt file. If we used &gt;, the seq_info.txt file would be rewritten every time the loop iterates, so it would only have text from the last variable used. Instead, &gt;&gt; adds to the end of the file. 5.16 Using Basename in for loops Basename is a function in UNIX that is helpful for removing a uniform part of a name from a list of files. In this case, we will use basename to remove the .fastq extension from the files that we’ve been working with. cd ~/shell_data/untrimmed_fastq/ basename SRR097977.fastq .fastq ## SRR097977 We see that this returns just the SRR accession, and no longer has the .fastq file extension on it. SRR097977 If we try the same thing but use .fasta as the file extension instead, nothing happens. This is because basename only works when it exactly matches a string in the file. cd ~/shell_data/untrimmed_fastq/ basename SRR097977.fastq .fasta ## SRR097977.fastq Basename is really powerful when used in a for loop. It allows to access just the file prefix, which you can use to name things. Let’s try this. Inside our for loop, we create a new name variable. We call the basename function inside the parenthesis, then give our variable name from the for loop, in this case ${filename}, and finally state that .fastq should be removed from the file name. It’s important to note that we’re not changing the actual files, we’re creating a new variable called name. The line echo $name will print to the terminal the variable name each time the for loop runs. Because we are iterating over two files, we expect to see two lines of output. cd ~/shell_data/untrimmed_fastq/ for filename in *.fastq do name=$(basename ${filename} .fastq) echo ${name} done ## SRR097977 ## SRR098026 5.17 Exercise Print the file prefix of all of the .txt files in our current directory. 5.18 Solution One way this is really useful is to move files. Let’s rename all of our .txt files using mv so that they have the years on them, which will document when we created them. cd ~/shell_data/untrimmed_fastq/ for filename in *.txt do name=$(basename ${filename} .txt) mv ${filename} ${name}_2022.txt done 5.19 Exercise Remove _2022 from all of the .txt files. 5.20 Solution "],["writing-scripts-and-working-with-data.html", "6 Writing Scripts and Working with Data 6.1 Writing files 6.2 Which Editor? 6.3 Control, Ctrl, or ^ Key 6.4 Exercise 6.5 Solution 6.6 Writing scripts 6.7 Custom grep control 6.8 Exercise 6.9 Solution 6.10 Making the script into a program 6.11 Moving and Downloading Data", " 6 Writing Scripts and Working with Data 6.1 Writing files We’ve been able to do a lot of work with files that already exist, but what if we want to write our own files? We’re not going to type in a FASTA file, but we’ll see as we go through other tutorials, there are a lot of reasons we’ll want to write a file, or edit an existing file. To add text to files, we’re going to use a text editor called Nano. We’re going to create a file to take notes about what we’ve been doing with the data files in ~/shell_data/untrimmed_fastq. This is good practice when working in bioinformatics. We can create a file called README.txt that describes the data files in the directory or documents how the files in that directory were generated. As the name suggests, it’s a file that we or others should read to understand the information in that directory. Let’s change our working directory to ~/shell_data/untrimmed_fastq using cd, then run nano to create a file called README.txt: cd ~/shell_data/untrimmed_fastq nano README.txt You should see something like this: The text at the bottom of the screen shows the keyboard shortcuts for performing various tasks in nano. We will talk more about how to interpret this information soon. 6.2 Which Editor? When we say, “nano is a text editor,” we really do mean “text”: nano can only work with plain character data, not tables, images, or any other human-friendly media. We use nano in examples because it is one of the least complex text editors. However, because of this trait, nano may not be powerful enough or flexible enough for the work you need to do after this workshop. On Unix systems (such as Linux and Mac OS X), many programmers use Emacs or Vim (both of which require more time to learn), or a graphical editor such as Gedit. On Windows, you may wish to use Notepad++. Windows also has a built-in editor called notepad that can be run from the command line in the same way as nano for the purposes of this lesson. No matter what editor you use, you will need to know the default location where it searches for files and where files are saved. If you start an editor from the shell, it will (probably) use your current working directory as its default location. If you use your computer’s start menu, the editor may want to save files in your desktop or documents directory instead. You can change this by navigating to another directory the first time you “Save As…” Let’s type in a few lines of text. Describe what the files in this directory are or what you’ve been doing with them. Once we’re happy with our text, we can press Ctrl-O (press the Ctrl or Control key and, while holding it down, press the O key) to write our data to disk. You’ll be asked what file we want to save this to: press Return to accept the suggested default of README.txt. Once our file is saved, we can use Ctrl-X to quit the nano editor and return to the shell. 6.3 Control, Ctrl, or ^ Key The Control key is also called the “Ctrl” key. There are various ways in which using the Control key may be described. For example, you may see an instruction to press the Ctrl key and, while holding it down, press the X key, described as any of: Control-X Control+X Ctrl-X Ctrl+X ^X C-x In nano, along the bottom of the screen you’ll see ^G Get Help ^O WriteOut. This means that you can use Ctrl-G to get help and Ctrl-O to save your file. Now you’ve written a file. You can take a look at it with less or cat, or open it up again and edit it with nano. 6.4 Exercise Open README.txt and add the date to the top of the file and save the file. 6.5 Solution 6.6 Writing scripts A really powerful thing about the command line is that you can write scripts. Scripts let you save commands to run them and also lets you put multiple commands together. Though writing scripts may require an additional time investment initially, this can save you time as you run them repeatedly. Scripts can also address the challenge of reproducibility: if you need to repeat an analysis, you retain a record of your command history within the script. One thing we will commonly want to do with sequencing results is pull out bad reads and write them to a file to see if we can figure out what’s going on with them. We’re going to look for reads with long sequences of N’s like we did before, but now we’re going to write a script, so we can run it each time we get new sequences, rather than type the code in by hand each time. We’re going to create a new file to put this command in. We’ll call it bad-reads-script.sh. The sh isn’t required, but using that extension tells us that it’s a shell script. cd ~/shell_data/untrimmed_fastq nano bad-reads-script.sh Bad reads have a lot of N’s, so we’re going to look for NNNNNNNNNN with grep. We want the whole FASTQ record, so we’re also going to get the one line above the sequence and the two lines below. We also want to look in all the files that end with .fastq, so we’re going to use the * wildcard. grep -B1 -A2 -h NNNNNNNNNN *.fastq | grep -v &#39;^--&#39; &gt; scripted_bad_reads.txt 6.7 Custom grep control We introduced the -v option in the previous episode, now we are using -h to “Suppress the prefixing of file names on output” according to the documentation shown by man grep. Type your grep command into the file and save it as before. Be careful that you did not add the $ at the beginning of the line. Now comes the neat part. We can run this script. Type: cd ~/shell_data/untrimmed_fastq bash bad-reads-script.sh It will look like nothing happened, but now if you look at scripted_bad_reads.txt, you can see that there are now reads in the file. 6.8 Exercise We want the script to tell us when it’s done. 1. Open bad-reads-script.sh and add the line echo \"Script finished!\" after the grep command and save the file. 2. Run the updated script. 6.9 Solution 6.10 Making the script into a program We had to type bash because we needed to tell the computer what program to use to run this script. Instead, we can turn this script into its own program. We need to tell the computer that this script is a program by making the script file executable. We can do this by changing the file permissions. We talked about permissions in an earlier episode. First, let’s look at the current permissions. cd ~/shell_data/untrimmed_fastq ls -l bad-reads-script.sh We see that it says -rw-r--r--. This shows that the file can be read by any user and written to by the file owner (you). We want to change these permissions so that the file can be executed as a program. We use the command chmod like we did earlier when we removed write permissions. Here we are adding (+) executable permissions (+x). cd ~/shell_data/untrimmed_fastq chmod +x bad-reads-script.sh Now let’s look at the permissions again. cd ~/shell_data/untrimmed_fastq ls -l bad-reads-script.sh Now we see that it says -rwxr-xr-x. The x’s that are there now tell us we can run it as a program. So, let’s try it! We’ll need to put ./ at the beginning so the computer knows to look here in this directory for the program. cd ~/shell_data/untrimmed_fastq ./bad-reads-script.sh The script should run the same way as before, but now we’ve created our very own computer program! You will learn more about writing scripts in a later lesson. 6.11 Moving and Downloading Data So far, we’ve worked with data that is pre-loaded on the instance in the cloud. Usually, however, most analyses begin with moving data onto the instance. Below we’ll show you some commands to download data onto your instance, or to move data between your computer and the cloud. 6.11.1 Getting data from the cloud There are two programs that will download data from a remote server to your local (or remote) machine: wget and curl. They were designed to do slightly different tasks by default, so you’ll need to give the programs somewhat different options to get the same behaviour, but they are mostly interchangeable. wget is short for “world wide web get”, and it’s basic function is to download web pages or data at a web address. cURL is a pun, it is supposed to be read as “see URL”, so its basic function is to display webpages or data at a web address. Which one you need to use mostly depends on your operating system, as most computers will only have one or the other installed by default. Let’s say you want to download some data from Ensembl. We’re going to download a very small tab-delimited file that just tells us what data is available on the Ensembl bacteria server. Before we can start our download, we need to know whether we’re using curl or wget. To see which program you have, type: cd ~/shell_data/untrimmed_fastq which curl which wget which is a BASH program that looks through everything you have installed, and tells you what folder it is installed to. If it can’t find the program you asked for, it returns nothing, i.e. gives you no results. On Mac OSX, you’ll likely get the following output: which curl ## /usr/bin/curl which wget Once you know whether you have curl or wget, use one of the following commands to download the file: cd ~/shell_data/untrimmed_fastq wget ftp://ftp.ensemblgenomes.org/pub/release-37/bacteria/species_EnsemblBacteria.txt or cd ~/shell_data/untrimmed_fastq curl -O ftp://ftp.ensemblgenomes.org/pub/release-37/bacteria/species_EnsemblBacteria.txt Since we wanted to download the file rather than just view it, we used wget without any modifiers. With curl however, we had to use the -O flag, which simultaneously tells curl to download the page instead of showing it to us and specifies that it should save the file using the same name it had on the server: species_EnsemblBacteria.txt Tip: If you are looking for another (or any really) text file in your home directory to use instead, try: find ~ -name *.txt "],["project-organization.html", "7 Project Organization 7.1 Tip 7.2 Exercise 7.3 Solution 7.4 Organizing your files 7.5 Documenting your activity on the project 7.6 Exercise 7.7 Solution 7.8 Navigating in Nano 7.9 References", " 7 Project Organization Getting your project started Project organization is one of the most important parts of a sequencing project, and yet is often overlooked amidst the excitement of getting a first look at new data. Of course, while it’s best to get yourself organized before you even begin your analyses, it’s never too late to start, either. You should approach your sequencing project similarly to how you do a biological experiment and this ideally begins with experimental design. We’re going to assume that you’ve already designed a beautiful sequencing experiment to address your biological question, collected appropriate samples, and that you have enough statistical power to answer the questions you’re interested in asking. These steps are all incredibly important, but beyond the scope of our course. For all of those steps (collecting specimens, extracting DNA, prepping your samples) you’ve likely kept a lab notebook that details how and why you did each step. However, the process of documentation doesn’t stop at the sequencer! Genomics projects can quickly accumulate hundreds of files across tens of folders. Every computational analysis you perform over the course of your project is going to create many files, which can especially become a problem when you’ll inevitably want to run some of those analyses again. For instance, you might have made significant headway into your project, but then have to remember the PCR conditions you used to create your sequencing library months prior. Other questions might arise along the way: - What were your best alignment results? - Which folder were they in: Analysis1, AnalysisRedone, or AnalysisRedone2? - Which quality cutoff did you use? - What version of a given program did you implement your analysis in? Good documentation is key to avoiding this issue, and luckily enough, recording your computational experiments is even easier than recording lab data. Copy/Paste will become your best friend, sensible file names will make your analysis understandable by you and your collaborators, and writing the methods section for your next paper will be easy! Remember that in any given project of yours, it’s worthwhile to consider a future version of yourself as an entirely separate collaborator. The better your documenation is, the more this ‘collaborator’ will feel indebted to you! With this in mind, let’s have a look at the best practices for documenting your genomics project. Your future self will thank you. In this exercise we will setup a file system for the project we will be working on for the variant section. We will start by creating a directory that we can use for the variant section. First navigate to your home directory. Then confirm that you are in the correct directory using the pwd command. cd pwd ## /Users/ggiaever You should see the output: /Users/dcuser 7.1 Tip If you aren’t in your home directory, the easiest way to get there is to enter the command cd ~, which always returns you to home. 7.2 Exercise Use the mkdir command to make the following directories: dc_workshop dc_workshop/docs dc_workshop/data dc_workshop/results cd ~/dc_workshop/data/untrimmed_fastq` nano README.txt 7.3 Solution Use ls -R to verify that you have created these directories. The -R option for ls stands for recursive. This option causes ls to return the contents of each subdirectory within the directory iteratively. cd ~ ls -R dc_workshop You should see the following output: dc_workshop/: data docs results dc_workshop/data: dc_workshop/docs: dc_workshop/results: 7.4 Organizing your files Before beginning any analysis, it’s important to save a copy of your raw data. The raw data should never be changed. Regardless of how sure you are that you want to carry out a particular data cleaning step, there’s always the chance that you’ll change your mind later or that there will be an error in carrying out the data cleaning and you’ll need to go back a step in the process. Having a raw copy of your data that you never modify guarantees that you will always be able to start over if something goes wrong with your analysis. When starting any analysis, you can make a copy of your raw data file and do your manipulations on that file, rather than the raw version. We learned in a previous episode how to prevent overwriting our raw data files by setting restrictive file permissions. You can store any results that are generated from your analysis in the results folder. This guarantees that you won’t confuse results file and data files in six months or two years when you are looking back through your files in preparation for publishing your study. The docs folder is the place to store any written analysis of your results, notes about how your analyses were carried out, and documents related to your eventual publication. 7.5 Documenting your activity on the project When carrying out wet-lab analyses, most scientists work from a written protocol and keep a hard copy of written notes in their lab notebook, including any things they did differently from the written protocol. This detailed record-keeping process is just as important when doing computational analyses. Luckily, it’s even easier to record the steps you’ve carried out computational than it is when working at the bench. The history command is a convenient way to document all the commands you have used while analyzing and manipulating your project files. Let’s document the work we have done on our project so far. View the commands that you have used so far during this session using history: history The history likely contains many more commands than you have used for the current project. Let’s view the last several commands that focus on just what we need for this project. View the last n lines of your history (where n = approximately the last few lines you think relevant). For our example, we will use the last 7: history | tail -n 7 7.6 Exercise Using your knowledge of the shell, use the append redirect &gt;&gt; to create a file called dc_workshop_log_XXXX_XX_XX.sh (Use the four-digit year, two-digit month, and two digit day, e.g. dc_workshop_log_2022_11_.XX.sh) 7.7 Solution history | tail -n 7 &gt; dc_workshop_log_2022_11_27.sh Note we used the last 7 lines as an example, the number of lines may vary. You may have noticed that your history contains the history command itself. To remove this redundancy from our log, let’s use the nano text editor to fix the file: nano dc_workshop_log_2022_11_27.sh (Remember to replace the 2022_11_27 with your workshop date.) From the nano screen, you can use your cursor to navigate, type, and delete any redundant lines. 7.8 Navigating in Nano Although nano is useful, it can be frustrating to edit documents, as you can’t use your mouse to navigate to the part of the document you would like to edit. Here are some useful keyboard shortcuts for moving around within a text document in nano. You can find more information by typing Ctrl-GCtrl-SpaceCtrl-→&lt;/kbd| to move forward one word | | Alt-SpaceEsc-SpaceCtrl-←&lt;/kbd| to move back one word | | Ctrl-A&lt;/kbd| to move to the beginning of the current line | | Ctrl-E&lt;/kbd| to move to the end of the current line | | Ctrl-W&lt;/kbd| to search | Add a date line and comment to the line where you have created the directory. Recall that any text on a line after a # is ignored by bash when evaluating the text as code. For example: 2022_11_27 Created sample directories for the Data Carpentry workshop Next, remove any lines of the history that are not relevant by navigating to those lines and using your delete key. Save your file and close nano. Your file should look something like this: 2022_11_27 Created sample directories for the Data Carpentry workshop cd ~ mkdir dc_workshop mkdir dc_workshop/docs mkdir dc_workshop/data mkdir dc_workshop/results If you keep this file up to date, you can use it to re-do your work on your project if something happens to your results files. To demonstrate how this works, first delete your dc_workshop directory and all of its subdirectories. Look at your directory contents to verify the directory is gone. rm -r dc_workshop ls shell_data dc_workshop_log_2022_11_27.sh Then run your workshop log file as a bash script. You should see the dc_workshop directory and all of its subdirectories reappear. bash dc_workshop_log_2017_10_27.sh ls shell_data dc_workshop dc_workshop_log_2022_11_27.sh It’s important that we keep our workshop log file outside of our dc_workshop directory if we want to use it to recreate our work. It’s also important for us to keep it up to date by regularly updating with the commands that we used to generate our results files. Congratulations! You’ve finished your introduction to using the shell for genomics projects. You now know how to navigate your file system, create, copy, move, and remove files and directories, and automate repetitive tasks using scripts and wildcards. With this solid foundation, you’re ready to move on to apply all of these new skills to carrying out more sophisticated bioinformatics analysis work. Don’t worry if everything doesn’t feel perfectly comfortable yet. We’re going to have many more opportunities for practice as we move forward on our bioinformatics journey! 7.9 References A Quick Guide to Organizing Computational Biology Projects "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
